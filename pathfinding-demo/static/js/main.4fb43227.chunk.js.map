{"version":3,"sources":["utils/pathfinding/pathfinding.worker.ts","../assemblyscript/build/index.js","../node_modules/go-pathfinding sync","utils/pathfinding/js.ts","utils/ForestGenerator.ts","utils/pathfinding/threaded.ts","utils/pathfinding/go.ts","utils/pathfinding/as.ts","utils/pathfinding/as-ts.ts","models/Tree.js","models/Player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Worker","__values","this","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__esModule","ProrityQueue","q","Map","highestPriority","prototype","push","data","priority","has","newData","get","set","pop","e_1","_a","pt","priorities","keys","max","priorities_1","priorities_1_1","p","e_1_1","error","isEmpty","size","findPointInArray","array","needle","find","x","y","neighbors","visited","grid","maxX","maxY","result","visitedCells","Array","from","j","candidate","heuristic","to","F","Math","SQRT2","dx","abs","dy","findPath","ax","ay","bx","by","start","goal","frontier","cameFrom","costSoFar","current","step","path","unshift","Int8Array","nbrs","newCost","webpackEmptyContext","req","e","Error","code","resolve","id","finder","Tree","age","ForestGenerator","height","width","initialTrees","seedRadius","seedDecay","seedStrength","desiredCoverage","seed","forest","trees","seeds","fill","map","col","ceil","random","addTree","currentlyCovered","getCoverage","removeSeeds","entries","split","parseInt","tmpMap","coords","strength","index","tree","key","delete","seedTrees","min","xMin","xMax","yMin","yMax","trunc","a","Promise","clone","Module","initPathfinding","startPathFinding","Grid","BiBestFirstFinder","Heuristic","octile","setObstacles","obstacles","forEach","setWalkableAt","findPathAsync","res","worker","rej","postMessage","pathfinding","operation","payload","onmessage","event","pathfindingResult","isInitialized","go","Go","fetch","response","arrayBuffer","bytes","WebAssembly","instantiate","importObject","run","instance","rawPath","window","setGrid","obstaclesArray","reduce","aggr","AsBind","_width","_height","reject","_findPath","props","useLoader","GLTFLoader","nodes","materials","scale","tree_trunk001_0","geometry","computeBoundingBox","z","tree_leaves001_0","boundingBox","rotation","PI","dispose","position","castShadow","receiveShadow","attach","color","material","memo","isWalking","Abe","FBXLoader","AbeWalking","traverse","isMesh","mixer","AnimationMixer","idleAnimation","clipAction","animations","walkAnimation","useEffect","stop","play","clock","Clock","useFrame","delta","getDelta","update","object","PathfindingGo","PathfindingAs","PathfindingAsTs","extend","OrbitControls","Controls","target","orbitRef","useRef","useThree","camera","gl","lookAt","copy","THREE","maxPolarAngle","minPolarAngle","args","domElement","ref","Pines","useState","setTrees","generate","fallback","Path","points","slice","Plane","handleClick","handleMove","onClick","onPointerMove","Camera","makeDefault","fov","playerPosition","targetPosition","setTargetPosition","cameraPosition","setPath","setIsWalking","isFinderReady","setFinderReady","isWorkerBusy","setIsWorkerBusy","finderMode","setFinderMode","Finder","useMemo","PathfindingJs","PathfindingThreaded","newTarget","point","then","className","mode","onCreated","shadowMap","enabled","type","intensity","penumbra","decay","Player","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"qFAAAA,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,iCCA9C,IAAIC,EAAYC,MAAQA,KAAKD,UAAa,SAASE,GAC/C,IAAIC,EAAsB,oBAAXC,QAAyBA,OAAOC,SAAUC,EAAIH,GAAKD,EAAEC,GAAII,EAAI,EAC5E,GAAID,EAAG,OAAOA,EAAEE,KAAKN,GACrB,GAAIA,GAAyB,kBAAbA,EAAEO,OAAqB,MAAO,CAC1CC,KAAM,WAEF,OADIR,GAAKK,GAAKL,EAAEO,SAAQP,OAAI,GACrB,CAAES,MAAOT,GAAKA,EAAEK,KAAMK,MAAOV,KAG5C,MAAM,IAAIW,UAAUV,EAAI,0BAA4B,oCAExDL,EAAQgB,YAAa,EACrB,IAMIC,EAA8B,WAC9B,SAASA,IACLd,KAAKe,EAAI,IAAIC,IACbhB,KAAKiB,gBAAkB,EAgD3B,OA9CAH,EAAaI,UAAUC,KAAO,SAAUC,EAAMC,GAC1C,GAAKrB,KAAKe,EAAEO,IAAID,GAGX,CACD,IAAIE,EAAUvB,KAAKe,EAAES,IAAIH,IAAa,GACtCE,EAAQJ,KAAKC,GACbpB,KAAKe,EAAEU,IAAIJ,EAAUE,QALrBvB,KAAKe,EAAEU,IAAIJ,EAAU,CAACD,IAOtBC,EAAWrB,KAAKiB,kBAChBjB,KAAKiB,gBAAkBI,IAG/BP,EAAaI,UAAUQ,IAAM,WACzB,IAAIC,EAAKC,EACLR,EAAOpB,KAAKe,EAAES,IAAIxB,KAAKiB,kBAAoB,GAC3CY,EAAKT,EAAKM,MACd,GAAoB,IAAhBN,EAAKZ,OAAc,CACnBR,KAAKe,EAAL,OAAiBf,KAAKiB,iBACtB,IAAIa,EAAa9B,KAAKe,EAAEgB,OACpBC,EAAM,EACV,IACI,IAAK,IAAIC,EAAelC,EAAS+B,GAAaI,EAAiBD,EAAaxB,QAASyB,EAAevB,KAAMuB,EAAiBD,EAAaxB,OAAQ,CAC5I,IAAI0B,EAAID,EAAexB,MACnByB,EAAIH,IACJA,EAAMG,IAIlB,MAAOC,GAAST,EAAM,CAAEU,MAAOD,GAR/B,QAUI,IACQF,IAAmBA,EAAevB,OAASiB,EAAKK,EAAY,SAAaL,EAAGrB,KAAK0B,GADzF,QAGU,GAAIN,EAAK,MAAMA,EAAIU,OAEjCrC,KAAKiB,gBAAkBe,OAGvBhC,KAAKe,EAAEU,IAAIzB,KAAKiB,gBAAiBG,GAErC,OAAOS,GAEXf,EAAaI,UAAUoB,QAAU,WAC7B,OAAuB,IAAhBtC,KAAKe,EAAEwB,MAEXzB,EAnDuB,GAqDlC,SAAS0B,EAAiBC,EAAOC,GAC7B,QAASD,EAAME,MAAK,SAAUf,GAC1B,IAAIgB,EAAIhB,EAAGgB,EAAGC,EAAIjB,EAAGiB,EACrB,OAAOD,IAAMF,EAAOE,GAAKC,IAAMH,EAAOG,KAG9C,SAASC,EAAUX,EAAGY,EAASC,GAK3B,IAJA,IAAIC,EAAOD,EAAK,GACZE,EAAOF,EAAK,GACZG,EAAS,GACTC,EAAeC,MAAMC,KAAKP,EAAQhB,QAC7BzB,EAAI,EAAGA,IAAM,EAAGA,IACrB,IAAK,IAAIiD,EAAI,EAAGA,IAAM,EAAGA,IAAK,CAC1B,IAAIC,EAAY,CAAEZ,EAAGT,EAAES,EAAItC,EAAGuC,EAAGV,EAAEU,EAAIU,GACnCC,EAAUZ,IAAMT,EAAES,GAAKY,EAAUX,IAAMV,EAAEU,IAGzCW,EAAUZ,EAAI,GAAKY,EAAUZ,GAAKK,GAGlCO,EAAUX,EAAI,GAAKW,EAAUX,GAAKK,GAGlCV,EAAiBY,EAAcI,IAGkB,IAAjDR,EAAK,GAAKQ,EAAUZ,EAAIK,EAAOO,EAAUX,KAG7CM,EAAOhC,KAAKqC,IAGpB,OAAOL,EAKX,SAASM,EAAUH,EAAMI,GAErB,IAAIC,EAAIC,KAAKC,MAAQ,EACjBC,EAAKF,KAAKG,IAAIT,EAAKV,EAAIc,EAAGd,GAC1BoB,EAAKJ,KAAKG,IAAIT,EAAKT,EAAIa,EAAGb,GAC9B,OAAO,GAAMiB,EAAKE,EAAML,EAAIG,EAAKE,EAAKL,EAAIK,EAAKF,GAqDnDjE,EAAQoE,SAnDR,SAAkBjB,EAAMkB,EAAIC,EAAIC,EAAIC,GAChC,IAAIC,EAAQ,CAAE1B,EAAGsB,EAAIrB,EAAGsB,GACpBI,EAAO,CAAE3B,EAAGwB,EAAIvB,EAAGwB,GACnBG,EAAW,IAAI1D,EACf2D,EAAW,IAAIzD,IACf0D,EAAY,IAAI1D,IAIpB,IAHAwD,EAASrD,KAAKmD,EAAO,GACrBG,EAAShD,IAAI6C,EAAO,MACpBI,EAAUjD,IAAI6C,EAAO,IACbE,EAASlC,WAAW,CACxB,IAAIqC,EAAUH,EAAS9C,MAEvB,IAAKiD,EACD,MAEJ,GAAIA,EAAQ/B,IAAM2B,EAAK3B,GAAK+B,EAAQ9B,IAAM0B,EAAK1B,EAAG,CAG9C,IAFA,IAAI+B,EAAOH,EAASjD,IAAImD,GACpBE,EAAO,CAAC,CAACF,EAAQ/B,EAAG+B,EAAQ9B,IAChB,OAAT+B,GAEHC,EAAKC,QAAQ,CAACF,EAAKhC,EAAGgC,EAAK/B,IAE3B+B,EAAOH,EAASjD,IAAIoD,GAIxB,IAFA,IAAIzB,EAAS,IAAI4B,UAAwB,EAAdF,EAAKrE,QAC5B+C,EAAI,EACCjD,EAAI,EAAGA,EAAIuE,EAAKrE,OAAQF,IAAK,CAClC,IAAIsC,EAAIiC,EAAKvE,GAAG,GACZuC,EAAIgC,EAAKvE,GAAG,GAChB6C,EAAOI,GAAKX,EACZO,EAAOI,EAAI,GAAKV,EAChBU,GAAK,EAET,OAAOJ,EAEX,IAAI6B,EAAOlC,EAAU6B,EAASF,EAAUzB,GACxC,IAAS1C,EAAI,EAAGA,EAAI0E,EAAKxE,OAAQF,IAAK,CAClC,IAAIG,EAAOuE,EAAK1E,GAEZ2E,EAAUP,EAAUlD,IAAImD,GAhD7B,EAkDC,IAAKD,EAAUpD,IAAIb,IAASiE,EAAUlD,IAAIf,IAASwE,EAAS,CACxDP,EAAUjD,IAAIhB,EAAMwE,GACpB,IAAI5D,EAAW4D,EAAUxB,EAAUc,EAAM9D,GACzC+D,EAASrD,KAAKV,EAAMY,GACpBoD,EAAShD,IAAIhB,EAAMkE,KAI/B,OAAO,IAAII,UAAU,K,8ECrKzB,SAASG,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBnD,KAAO,WAAa,MAAO,IAC/CmD,EAAoBK,QAAUL,EAC9BtF,EAAOC,QAAUqF,EACjBA,EAAoBM,GAAK,K,kJCJrBxC,EACAyC,E,+ICCSC,EAKX,WAAY9C,EAAWC,GAAY,yBAJnCD,OAIkC,OAHlCC,OAGkC,OAFlC8C,SAEkC,EAChC3F,KAAK4C,EAAIA,EACT5C,KAAK6C,EAAIA,EACT7C,KAAK2F,IAAM,GAIFC,EAAb,WAcE,aAAmF,IAAvEC,EAAsE,uDAArD,IAAKC,EAAgD,uDAAhC,IAAKC,EAA2B,uDAAJ,GAAI,yBAblFA,kBAakF,OAZlFC,WAAqB,EAY6D,KAXlFC,UAAoB,GAW8D,KAVlFC,aAAuB,GAU2D,KARlFC,gBAA0B,GAQwD,KAPlFC,KAAe,EAOmE,KANlFN,WAMkF,OALlFD,YAKkF,OAJlFQ,YAIkF,OAHlFC,MAAqB,GAG6D,KAFlFC,MAA6B,IAAIvF,IAG/BhB,KAAK6F,OAASA,EACd7F,KAAK8F,MAAQA,EACb9F,KAAK+F,aAAeA,EAEpB/F,KAAKqG,OAAShD,MAAMyC,GAAOU,KAnCJ,GAoCvBxG,KAAKqG,OAASrG,KAAKqG,OAAOI,KAAI,SAAAC,GAAG,OAAIrD,MAAMwC,GAAQW,KApC5B,MAqCvB,IAAK,IAAIlG,EAAI,EAAGA,EAAIN,KAAK+F,aAAczF,IACrC,OAAa,CACX,IAAMsC,EAAIgB,KAAK+C,KAAK/C,KAAKgD,SAAW5G,KAAK8F,OACnCjD,EAAIe,KAAK+C,KAAK/C,KAAKgD,SAAW5G,KAAK6F,QACzC,GAzCmB,IAyCf7F,KAAKqG,OAAOzD,GAAGC,GAA2B,CAC5C7C,KAAKqG,OAAOzD,GAAGC,GAzCG,EA0ClB7C,KAAK6G,QAAQjE,EAAGC,GAChB,QA5BV,uDAoCI,IADA,IAAIiE,EAAmB9G,KAAK+G,cACrBD,EAAmB9G,KAAKmG,iBAC7BnG,KAAK4E,OACLkC,EAAmB9G,KAAK+G,cAI1B,OAFA/G,KAAKgH,cAEEhH,KAAKsG,QA1ChB,oCA6CiB,IAAD,gBACStG,KAAKuG,MAAMU,WADpB,IACZ,2BAA2C,CAAC,IAAD,4BACnBC,MAAM,KAAKT,KAAI,SAAA7D,GAAC,OAAIuE,SAASvE,MADV,mBAClCA,EADkC,KAC/BC,EAD+B,KAEzC7C,KAAKqG,OAAOzD,GAAGC,GAhEM,GA6DX,iCA7ChB,oCAqDI,IAAMN,EAAOvC,KAAK8F,MAAQ9F,KAAK6F,OAC/B,OAAO7F,KAAKsG,MAAM9F,OAAS+B,IAtD/B,8BAyDUK,EAAWC,GACjB7C,KAAKsG,MAAMnF,KAAK,IAAIuE,EAAK9C,EAAGC,IAC5B7C,KAAKqG,OAAOzD,GAAGC,GA1ES,IAe5B,6BAgEI,IAFK,EAECuE,EAA8B,IAAIpG,IAFnC,cAG4BhB,KAAKuG,MAAMU,WAHvC,IAGL,2BAAuD,CAAC,IAAD,yBAA3CI,EAA2C,KAAnCC,EAAmC,KACrDF,EAAO3F,IAAI4F,EAAQC,EAAYtH,KAAKiG,UAAYqB,IAJ7C,8BAMLtH,KAAKuG,MAAQa,EANR,oBAS4BpH,KAAKuG,MAAMU,WATvC,IASL,2BAAuD,CAAC,IAAD,yBAA3CI,EAA2C,KAAnCC,EAAmC,KACrD,GAAI1D,KAAKgD,SAAWU,EAAU,CAAC,IAAD,EACbD,EAAOH,MAAM,KAAKT,KAAI,SAAA7D,GAAC,OAAIuE,SAASvE,MADvB,mBACrBA,EADqB,KAClBC,EADkB,KAE5B7C,KAAK6G,QAAQjE,EAAGC,KAZf,8BAqBL,IAAK,IAAM0E,KANXvH,KAAKsG,MAAQtG,KAAKsG,MAAMG,KAAI,SAAAe,GAE1B,OADAA,EAAK7B,MACE6B,KAIWxH,KAAKsG,MAAO,CAC9B,IAAMnE,EAAInC,KAAKsG,MAAMiB,GACfE,EAAMtF,EAAES,EAAI,IAAMT,EAAEU,EACtB7C,KAAKuG,MAAMjF,IAAImG,IACjBzH,KAAKuG,MAAMmB,OAAOD,GAGtBzH,KAAK2H,cA1FT,kCA8FI,IAAK,IAAMJ,KAASvH,KAAKsG,MASvB,IARA,IAAMkB,EAAOxH,KAAKsG,MAAMiB,GADM,EAEG,CAC/B3D,KAAK5B,IAAIwF,EAAK5E,EAAI5C,KAAKgG,WAAY,GACnCpC,KAAKgE,IAAIJ,EAAK5E,EAAI5C,KAAKgG,WAAYhG,KAAK8F,OACxClC,KAAK5B,IAAIwF,EAAK3E,EAAI7C,KAAKgG,WAAY,GACnCpC,KAAKgE,IAAIJ,EAAK3E,EAAI7C,KAAKgG,WAAYhG,KAAK6F,SAJnCgC,EAFuB,KAEjBC,EAFiB,KAEXC,EAFW,KAELC,EAFK,KASrB1H,EAAI,EAAGA,GAAgB,EAAXkH,EAAK7B,IAASrF,IAAK,CACtC,IAAMsC,EAAIgB,KAAKqE,MAAMJ,EAAOjE,KAAKgD,UAAYkB,EAAOD,IAC9ChF,EAAIe,KAAKqE,MAAMF,EAAOnE,KAAKgD,UAAYoB,EAAOD,IACpD,GAzHoB,IAyHhB/H,KAAKqG,OAAOzD,GAAGC,GAAnB,CAGA7C,KAAKqG,OAAOzD,GAAGC,GA3HK,EA4HpB,IAAM4E,EAAM7E,EAAI,IAAMC,EAChBnC,EAAQV,KAAKuG,MAAM/E,IAAIiG,IAAQ,EACrCzH,KAAKuG,MAAM9E,IAAIgG,EAAK/G,EAAQV,KAAKkG,oBAhHzC,K,oDDXA,sBAAAgC,EAAA,+EACSC,QAAQ5C,WADjB,4C,sBAoBA,SAAStB,EAASX,EAAgCI,GAChD,IAAMmB,EAAOY,EAAOxB,SAClBL,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAMvE,EAAG,GAAK,GACnBE,KAAKqE,MAAMvE,EAAG,GAAK,GACnBV,EAAKoF,SAGP,OAAIvD,EAAKrE,OACAqE,EAgBX,IAQewD,EARmB,CAChCC,gB,2CACAC,iBA5CF,SAA0BzC,EAAeD,GAMvC,OALA7C,EAAO,IAAIwF,OAAK1C,EAAOD,GACvBJ,EAAS,IAAIgD,oBAAkB,CAC7BhF,UAAWiF,YAAUC,UAGhB,GAuCPC,aArCF,SAAsBC,GAKpB,OAJAA,EAAUC,SAAQ,YAAe,IAAZlG,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACtBG,EAAK+F,cAAclG,EAAGD,GAAG,OAGpB,GAiCPqB,WACA+E,cAXF,SAAuB1F,EAAgCI,GACrD,OAAO,IAAIyE,SAAQ,SAACc,GAClBA,EAAIhF,EAASX,EAAMI,S,SE7CjBwF,EAAS,I,OAAIpJ,G,4CAEnB,sBAAAoI,EAAA,+EACSC,QAAQ5C,WADjB,4C,kEAkCA,WAA6BjC,EAAgCI,GAA7D,SAAAwE,EAAA,+EACS,IAAIC,SAAQ,SAACc,EAAKE,GACvBD,EAAOE,YAAY,CACjBC,YAAa,CACXC,UAAW,WACXC,QAAS,CACPjG,OACAI,SAINwF,EAAOM,UAAY,SAACC,GACdA,EAAMrI,KAAKsI,mBAAgE,aAA3CD,EAAMrI,KAAKsI,kBAAkBJ,WAC/DL,EAAIQ,EAAMrI,KAAKsI,kBAAkBvG,aAbzC,4C,sBAmBA,IAQekF,EARmB,CAChCC,gB,2CACAC,iBAnDF,SAA0BzC,EAAeD,GAWvC,OAVAqD,EAAOE,YAAY,CACjBC,YAAa,CACXC,UAAW,QACXC,QAAS,CACPzD,QACAD,cAKC,GAyCP+C,aAvCF,SAAsBC,GAUpB,OATAK,EAAOE,YAAY,CACjBC,YAAa,CACXC,UAAW,eACXC,QAAS,CACPV,iBAKC,GA8BP5E,SA3BF,SAAkBX,EAAgCI,GAChD,MAAO,CAAC,CAAC,EAAG,KA2BZsF,c,+CC5DEW,G,QAAgB,G,4CAEpB,kCAAAzB,EAAA,0DACMyB,EADN,yCAEWxB,QAAQ5C,WAFnB,cAKQqE,EAAK,IAAIC,GALjB,SAMyBC,MAAM,yDAN/B,cAMQC,EANR,gBAOsBA,EAASC,cAP/B,cAOQC,EAPR,iBAQuBC,YAAYC,YAAYF,EAAOL,EAAGQ,cARzD,QAQQjH,EARR,OASEwG,GAAgB,EAEhBC,EAAGS,IAAIlH,EAAOmH,UAXhB,6C,sBAmCA,SAASrG,EAASX,EAAgCI,GAEhD,IAAM6G,EAAUC,OAAOvG,SAASX,EAAK,GAAK,EAAGA,EAAK,GAAK,EAAGI,EAAG,GAAK,EAAGA,EAAG,GAAK,GACvEmB,EAAO,GACb,GAAI0F,EACF,IAAK,IAAIjK,EAAE,EAAGiD,EAAE,EAAGjD,EAAEiK,EAAQ/J,OAAQF,GAAG,EAAGiD,IACzCsB,EAAKtB,GAAK,CAAC4D,SAASoD,EAAQjK,GAAI,IAAK6G,SAASoD,EAAQjK,EAAE,GAAI,KAGhE,OAAOuE,EAST,ICtDI7B,EACAyC,ED6DW4C,EARmB,CAChCC,gB,2CACAC,iBAzCF,SAA0BzC,EAAeD,GAIvC,OAFA2E,OAAOC,QAAQ3E,EAAOD,IAEf,GAsCP+C,aApCF,SAAsBC,GAAkC,IAAD,EAC/C6B,EAAgC7B,EAAU8B,QAAO,SACrDC,EADqD,GAGjD,IADHhI,EACE,EADFA,EAAGC,EACD,EADCA,EAIJ,OAFA+H,EAAKzJ,KAAKyB,GACVgI,EAAKzJ,KAAK0B,GACH+H,IACN,IAIH,OAFA,EAAAJ,QAAO5B,aAAP,oBAAuB8B,KAEhB,GAyBPzG,WACA+E,cAXF,SAAuB1F,EAAgCI,GACrD,OAAO,IAAIyE,SAAQ,SAACc,GAClBA,EAAIhF,EAASX,EAAMI,S,SChDnBmC,EAAS,E,4CAEb,gCAAAqC,EAAA,sEAC4B2C,IAAOV,YAAYL,MAAM,sEADrD,uBACUjK,EADV,EACUA,QACAoE,EAAapE,EAAboE,SACRwB,EAASxB,EAHX,+D,sBAwBA,SAASA,EAASX,EAAgCI,GAUhD,IATA,IAAMuF,EAAMxD,EACVzC,EACAY,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAMvE,EAAG,GAAK,GACnBE,KAAKqE,MAAMvE,EAAG,GAAK,IAGfmB,EAAO,GACJvE,EAAI,EAAGA,EAAI2I,EAAIzI,OAAS,EAAGF,GAAK,EACvCuE,EAAK1D,KAAK,CAAC8H,EAAI3I,GAAI2I,EAAI3I,EAAI,KAG7B,OAAOuE,EAUT,ICpDI7B,EACAyC,ED2DW4C,EARmB,CAChCC,gB,2CACAC,iBA1CF,SAA0BuC,EAAgBC,GAMxC,OALA/H,EAAO,IAAI+B,UAAU+F,EAASC,EAAU,IACnC,GAAKA,EACV/H,EAAK,GAAK8H,EACVjF,EAASkF,GAEF,GAqCPnC,aAnCF,SAAsBC,GAKpB,OAJAA,EAAUC,SAAQ,YAAe,IAAZlG,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACtBG,EAAK,GAAKH,EAAIgD,EAASjD,IAAM,MAGxB,GA+BPqB,WACA+E,cAZF,SAAuB1F,EAAgCI,GACrD,OAAO,IAAIyE,SAAQ,SAAC5C,EAASyF,GAC3BzF,EAAQtB,EAASX,EAAMI,S,SC7CvBmC,EAAS,E,4CAEb,sBAAAqC,EAAA,6DACEzC,EAASwF,WADX,kBAGS9C,QAAQ5C,WAHjB,4C,sBAsBA,SAAStB,EAASX,EAAgCI,GAUhD,IATA,IAAMuF,EAAMxD,EACVzC,EACAY,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAM3E,EAAK,GAAK,GACrBM,KAAKqE,MAAMvE,EAAG,GAAK,GACnBE,KAAKqE,MAAMvE,EAAG,GAAK,IAGfmB,EAAO,GACJvE,EAAI,EAAGA,EAAI2I,EAAIzI,OAAS,EAAGF,GAAK,EACvCuE,EAAK1D,KAAK,CAAC8H,EAAI3I,GAAI2I,EAAI3I,EAAI,KAG7B,OAAOuE,EAUT,IAQewD,EARmB,CAChCC,gB,2CACAC,iBA1CF,SAA0BuC,EAAgBC,GAMxC,OALA/H,EAAO,IAAI+B,UAAU+F,EAASC,EAAU,IACnC,GAAKA,EACV/H,EAAK,GAAK8H,EACVjF,EAASkF,GAEF,GAqCPnC,aAnCF,SAAsBC,GAKpB,OAJAA,EAAUC,SAAQ,YAAe,IAAZlG,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACtBG,EAAK,GAAKH,EAAIgD,EAASjD,IAAM,MAGxB,GA+BPqB,WACA+E,cAZF,SAAuB1F,EAAgCI,GACrD,OAAO,IAAIyE,SAAQ,SAAC5C,EAASyF,GAC3BzF,EAAQtB,EAASX,EAAMI,S,kBCtCZ,SAASgC,EAAKwF,GAAQ,IAAD,EACLC,YAAUC,IAAY,2BAA3CC,EAD0B,EAC1BA,MAAOC,EADmB,EACnBA,UADmB,EAEJJ,EAAtBK,aAF0B,MAElB,CAAC,EAAG,EAAG,GAFW,EAGlCF,EAAMG,gBAAgBC,SAASC,qBAC/B,IAAMC,EAAIN,EAAMO,iBAAiBH,SAASI,YAAYjE,IAAI+D,EAAIJ,EAAM,GAEpE,OACE,yCAAOO,SAAU,EAAElI,KAAKmI,GAAK,EAAG,EAAG,IAAQb,EAA3C,CAAkDK,MAAOA,EAAOS,QAAS,OACvE,0BAAMP,SAAUJ,EAAMO,iBAAiBH,SAAUQ,SAAU,CAAC,EAAG,GAAIN,GAAIO,YAAU,EAACC,eAAa,GAC7F,0CAAsBC,OAAO,WAAWC,MAAM,WAEhD,0BAAMC,SAAUhB,EAAU,aAAcG,SAAUJ,EAAMG,gBAAgBC,SAAUQ,SAAU,CAAC,EAAG,GAAIN,GAAIO,YAAU,EAACC,eAAa,K,YClBvHI,mBAAK,SAAqBrB,GAAQ,IAAD,EAChBA,EAAtBsB,iBADsC,SAExCC,EAAMtB,YAAUuB,IAAW,oCAC3BC,EAAaxB,YAAUuB,IAAW,kCACxCD,EAAIG,UAAS,SAAA3M,GACPA,EAAE4M,SACJ5M,EAAEiM,YAAa,EACfjM,EAAEkM,eAAgB,MAGtB,IAAMW,EAAQ,IAAIC,iBAAeN,GAC3BO,EAAgBF,EAAMG,WAAWR,EAAIS,WAAW,IAChDC,EAAgBL,EAAMG,WAAWN,EAAWO,WAAW,IAE7DE,qBAAU,WACJZ,GACFQ,EAAcK,OACdF,EAAcG,SAEdH,EAAcE,OACdL,EAAcM,UAEb,CAACd,IAEN,IAAMe,EAAQ,IAAIC,QAMlB,OALAC,aAAS,WACP,IAAMC,EAAQH,EAAMI,WACpBb,EAAMc,OAAOF,MAGR,0BAAWxC,EAChB,+BAAW2C,OAAQpB,EAAKlB,MAAO,CAAC,MAAQ,MAAQ,OAASU,SAAU,CAAC,GAAI,GAAK,GAAIG,OAAO,eCpBtF/F,GAAS,IAAIT,EAAgB,GAAI,GAAI,IAC3CkI,EAAcxF,kBACdyF,EAAczF,kBACd0F,EAAgB1F,kBAEhB2F,YAAO,CAAEC,oBAET,IAAMC,GAAW5B,gBAAK,YAA2B,IAAxBN,EAAuB,EAAvBA,SAAUmC,EAAa,EAAbA,OAC3BC,EAAWC,mBAD6B,EAEvBC,cAAfC,EAFsC,EAEtCA,OAAQC,EAF8B,EAE9BA,GAWhB,OATArB,qBAAU,WACRoB,EAAOE,OAAOzC,GACdoC,EAAS1J,SAAW0J,EAAS1J,QAAQyJ,OAAOO,KAAxB,YAAiCC,UAAjC,YAAkDR,OACrE,CAACnC,EAAUmC,EAAQC,EAAUG,IAEhCf,aAAS,WACPY,EAAS1J,QAAQiJ,YAIjB,mCACEiB,cAAejL,KAAKmI,GAAK,EACzB+C,cAAelL,KAAKmI,GAAK,EACzBgD,KAAM,CAACP,EAAQC,EAAGO,YAClBC,IAAKZ,OAKLa,GAAQ3C,gBAAK,YAAiB,IAAd9G,EAAa,EAAbA,OAAa,EACP0J,mBAAS,IADF,mBAC1B7I,EAD0B,KACnB8I,EADmB,KAQjC,OANAhC,qBAAU,WACR,IAAM3G,EAAMJ,GAAOgJ,WACnBD,EAAS3I,GACThB,EAAOmD,aAAanC,KACnB,CAAChB,IAGF,kBAAC,WAAD,CAAU6J,SAAU,sCACjBhJ,EAAMG,KAAI,gBAAG7D,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAG8C,EAAT,EAASA,IAAT,OAAoB,kBAAC,EAAD,CAC7BsG,SAAU,CACJ,EAAJrJ,EAAQgB,KAAKgD,SACb,GACI,EAAJ/D,EAAQe,KAAKgD,UAEf2E,MAAO,CACL,GAAY,GAAN5F,EACN,GAAY,GAANA,EACN,GAAY,GAANA,YAOV4J,GAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQpB,EAAa,EAAbA,OACtB,OAAO,oCACL,0BAAMnC,SAAU,CAACmC,EAAO,IAAK,GAAKA,EAAO,IAAKlC,YAAU,GACtD,uCAAmBE,OAAO,WAAW2C,KAAM,CAAC,IAAM,GAAK,OACvD,0CAAsB3C,OAAO,WAAWC,MAAM,eAE/CmD,EAAOC,MAAM,GAAGhJ,KAAI,SAAAtE,GAAC,OACpB,0BAAM8J,SAAU,CAAQ,EAAP9J,EAAE,IAAS,GAAY,EAAPA,EAAE,IAAS+J,YAAU,GACpD,uCAAmBE,OAAO,WAAW2C,KAAM,CAAC,IAAM,GAAK,OACvD,0CAAsB3C,OAAO,WAAWC,MAAM,gBAMhDqD,GAAQ,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAC5B,OACE,0BAAM9D,SAAU,EAAElI,KAAKmI,GAAK,EAAG,EAAG,GAAIE,SAAU,CAAC,IAAK,GAAK,IAAKE,eAAa,EAAC0D,QAASF,EAAaG,cAAeF,GACjH,yCAAqBxD,OAAO,WAAW2C,KAAM,CAAC,IAAK,IAAK,IAAK,OAC7D,0CAAsB3C,OAAO,WAAWC,MAAM,gBAK9C0D,GAAS,SAAC,GAAkB,IAAhB9D,EAAe,EAAfA,SAChB,OACE,kBAAC,IAAD,CAAmB+D,aAAW,EAAC/D,SAAUA,EAAUgE,IAAK,MAI7C,cAAO,IAAD,EACyBd,mBAAS,CAAC,GAAI,EAAG,KAD1C,mBACZe,EADY,aAEyBf,mBAAS,CAAC,GAAI,EAAG,MAF1C,mBAEZgB,EAFY,KAEIC,EAFJ,OAGyBjB,mBAAS,CAAC,GAAI,EAAG,KAH1C,mBAGZkB,EAHY,aAIKlB,mBAAS,KAJd,mBAIZtK,EAJY,KAINyL,EAJM,OAKenB,oBAAS,GALxB,mBAKZ3C,EALY,KAKD+D,EALC,OAMqBpB,oBAAS,GAN9B,mBAMZqB,EANY,KAMGC,EANH,OAOqBtB,oBAAS,GAP9B,mBAOZuB,EAPY,KAOEC,EAPF,OAQiBxB,mBAAS,YAR1B,mBAQZyB,EARY,KAQAC,EARA,KASbC,EAASC,mBAAQ,WACrB,OAAOH,GACL,IAAK,KAAM,OAAOI,EAClB,IAAK,KAAM,OAAOlD,EAClB,IAAK,iBAAkB,OAAOC,EAC9B,IAAK,gCAAiC,OAAOC,EAC7C,QAAS,OAAOiD,KAEjB,CAACL,IAjBe,4CAqBnB,WAA0BxL,GAA1B,iBAAA8C,EAAA,0DACMwI,EADN,wDAIEC,GAAgB,GACVO,EAAY,CAAC9L,EAAE+L,MAAMvO,EAAGwC,EAAE+L,MAAMtO,EAAGuC,EAAE+L,MAAMxF,GACjDyE,EAAkBc,GANpB,SAOqBJ,EAAO9H,cAAckH,EAAgBgB,GAP1D,OAOQrM,EAPR,OAQE8L,GAAgB,GAChBL,EAAQzL,GATV,6CArBmB,sBA8CnB,OAboB,IAAI+J,YACZ3C,SAASxK,IAAI,GAAI,EAAG,IAEhC2L,qBAAU,WACJoD,GACFM,EAAOvI,iBAAiB,GAAI,MAE7B,CAACiI,EAAeM,IAEnB1D,qBAAU,WACR0D,EAAOxI,kBAAkB8I,MAAK,kBAAMX,GAAe,QAClD,CAACK,IAEGN,GACL,oCACA,yBAAKa,UAAU,YACZ,CAAC,KAAM,WAAY,KAAM,iBAAkB,iCAAiC5K,KAAI,SAAA6K,GAAI,OACnF,0BAAMD,UAAS,kBAAaC,IAASV,EAAa,WAAa,IAAMf,QAAS,kBAAMgB,EAAcS,KAAQA,OAG9G,kBAAC,IAAD,CACEC,UAAW,YAAa,IAAV9C,EAAS,EAATA,GACZA,EAAG+C,UAAUC,SAAU,EACvBhD,EAAG+C,UAAUE,KAAO9C,qBAItB,kBAAC,GAAD,CAAQ3C,SAAUoE,IAClB,kCAAcsB,UAAW,MACzB,+BACE1F,SAAU,CAAC,GAAI,GAAI,IACnB2F,SAAU,EACVC,MAAO,EACP3F,YAAU,IAGZ,kBAACiC,GAAD,CAAUlC,SAAUiE,EAAgB9B,OAAQ8B,IAC5C,kBAAC,WAAD,CAAUZ,SAAU,sCAClB,kBAACwC,GAAD,CAAa7F,SAAUiE,EAAgB1D,UAAWA,KAEpD,kBAAC,WAAD,CAAU8C,SAAU,sCAClB,kBAAC,GAAD,CAAOK,YAxDb,SAAqBvK,GACnBmL,GAAc/D,IAuDuBoD,WA1EpB,+CA4Ef,kBAACV,GAAD,CAAOzJ,OAAQqL,IACf,kBAAC,GAAD,CAAMtB,OAAQ3K,EAAMuJ,OAAQ+B,OCvKd4B,QACW,cAA7BvH,OAAOwH,SAASC,UAEe,UAA7BzH,OAAOwH,SAASC,UAEhBzH,OAAOwH,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAAxQ,GACLyQ,QAAQzQ,MAAMA,EAAM0Q,c","file":"static/js/main.4fb43227.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"adad9c7d41097794a22d.worker.js\");\n};","\"use strict\";\r\nvar __values = (this && this.__values) || function(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n};\r\nexports.__esModule = true;\r\nvar Point = /** @class */ (function () {\r\n    function Point() {\r\n    }\r\n    return Point;\r\n}());\r\n;\r\nvar ProrityQueue = /** @class */ (function () {\r\n    function ProrityQueue() {\r\n        this.q = new Map();\r\n        this.highestPriority = 0;\r\n    }\r\n    ProrityQueue.prototype.push = function (data, priority) {\r\n        if (!this.q.has(priority)) {\r\n            this.q.set(priority, [data]);\r\n        }\r\n        else {\r\n            var newData = this.q.get(priority) || [];\r\n            newData.push(data);\r\n            this.q.set(priority, newData);\r\n        }\r\n        if (priority > this.highestPriority) {\r\n            this.highestPriority = priority;\r\n        }\r\n    };\r\n    ProrityQueue.prototype.pop = function () {\r\n        var e_1, _a;\r\n        var data = this.q.get(this.highestPriority) || [];\r\n        var pt = data.pop();\r\n        if (data.length === 0) {\r\n            this.q[\"delete\"](this.highestPriority);\r\n            var priorities = this.q.keys();\r\n            var max = 0;\r\n            try {\r\n                for (var priorities_1 = __values(priorities), priorities_1_1 = priorities_1.next(); !priorities_1_1.done; priorities_1_1 = priorities_1.next()) {\r\n                    var p = priorities_1_1.value;\r\n                    if (p > max) {\r\n                        max = p;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (priorities_1_1 && !priorities_1_1.done && (_a = priorities_1[\"return\"])) _a.call(priorities_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            this.highestPriority = max;\r\n        }\r\n        else {\r\n            this.q.set(this.highestPriority, data);\r\n        }\r\n        return pt;\r\n    };\r\n    ProrityQueue.prototype.isEmpty = function () {\r\n        return this.q.size === 0;\r\n    };\r\n    return ProrityQueue;\r\n}());\r\nfunction findPointInArray(array, needle) {\r\n    return !!array.find(function (_a) {\r\n        var x = _a.x, y = _a.y;\r\n        return x === needle.x && y === needle.y;\r\n    });\r\n}\r\nfunction neighbors(p, visited, grid) {\r\n    var maxX = grid[0];\r\n    var maxY = grid[1];\r\n    var result = [];\r\n    var visitedCells = Array.from(visited.keys());\r\n    for (var i = 1; i >= -1; i--) {\r\n        for (var j = 1; j >= -1; j--) {\r\n            var candidate = { x: p.x - i, y: p.y - j };\r\n            if (candidate.x === p.x && candidate.y === p.y) {\r\n                continue;\r\n            }\r\n            if (candidate.x < 0 || candidate.x >= maxX) {\r\n                continue;\r\n            }\r\n            if (candidate.y < 0 || candidate.y >= maxY) {\r\n                continue;\r\n            }\r\n            if (findPointInArray(visitedCells, candidate)) {\r\n                continue;\r\n            }\r\n            if (grid[2 + (candidate.x * maxX + candidate.y)] !== 0) {\r\n                continue;\r\n            }\r\n            result.push(candidate);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getCost(from, to) {\r\n    return 1;\r\n}\r\nfunction heuristic(from, to) {\r\n    // octile\r\n    var F = Math.SQRT2 - 1;\r\n    var dx = Math.abs(from.x - to.x);\r\n    var dy = Math.abs(from.y - to.y);\r\n    return 1 / ((dx < dy) ? F * dx + dy : F * dy + dx);\r\n}\r\nfunction findPath(grid, ax, ay, bx, by) {\r\n    var start = { x: ax, y: ay };\r\n    var goal = { x: bx, y: by };\r\n    var frontier = new ProrityQueue();\r\n    var cameFrom = new Map();\r\n    var costSoFar = new Map();\r\n    frontier.push(start, 0);\r\n    cameFrom.set(start, null);\r\n    costSoFar.set(start, 0);\r\n    while (!frontier.isEmpty()) {\r\n        var current = frontier.pop();\r\n        // @ts-ignore\r\n        if (!current) {\r\n            break;\r\n        }\r\n        if (current.x === goal.x && current.y === goal.y) {\r\n            var step = cameFrom.get(current);\r\n            var path = [[current.x, current.y]];\r\n            while (step !== null) {\r\n                // @ts-ignore\r\n                path.unshift([step.x, step.y]);\r\n                // @ts-ignore\r\n                step = cameFrom.get(step);\r\n            }\r\n            var result = new Int8Array(path.length * 2);\r\n            var j = 0;\r\n            for (var i = 0; i < path.length; i++) {\r\n                var x = path[i][0];\r\n                var y = path[i][1];\r\n                result[j] = x;\r\n                result[j + 1] = y;\r\n                j += 2;\r\n            }\r\n            return result;\r\n        }\r\n        var nbrs = neighbors(current, cameFrom, grid);\r\n        for (var i = 0; i < nbrs.length; i++) {\r\n            var next = nbrs[i];\r\n            // @ts-ignore\r\n            var newCost = costSoFar.get(current) + getCost(current, next);\r\n            // @ts-ignore\r\n            if (!costSoFar.has(next) || costSoFar.get(next) >= newCost) {\r\n                costSoFar.set(next, newCost);\r\n                var priority = newCost + heuristic(goal, next);\r\n                frontier.push(next, priority);\r\n                cameFrom.set(next, current);\r\n            }\r\n        }\r\n    }\r\n    return new Int8Array(0);\r\n}\r\nexports.findPath = findPath;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 163;","import { Grid, BiBestFirstFinder, Heuristic, Util } from \"pathfinding\";\nimport { PathfindingModule } from \"./interfaces\";\nimport { Tree } from \"../ForestGenerator\";\n\nlet grid: Grid;\nlet finder: BiBestFirstFinder;\n\nasync function initPathfinding(): Promise<void> {\n  return Promise.resolve();\n}\n\nfunction startPathFinding(width: number, height: number): boolean {\n  grid = new Grid(width, height);\n  finder = new BiBestFirstFinder({\n    heuristic: Heuristic.octile,\n  });\n\n  return true;\n}\nfunction setObstacles(obstacles: Array<Tree>): boolean {\n  obstacles.forEach(({ x, y }) => {\n    grid.setWalkableAt(y, x, false);\n  });\n\n  return true;\n}\n\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\n  const path = finder.findPath(\n    Math.trunc(from[2] / 2),\n    Math.trunc(from[0] / 2),\n    Math.trunc(to[2] / 2),\n    Math.trunc(to[0] / 2),\n    grid.clone()\n  );\n\n  if (path.length === 0) {\n    return path;\n  }\n\n  // return Util.smoothenPath(\n  //   grid,\n  //   path\n  // );\n  return path;\n}\n\nfunction findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\n  return new Promise((res) => {\n    res(findPath(from, to));\n  });\n}\n\nconst Module: PathfindingModule = {\n  initPathfinding,\n  startPathFinding,\n  setObstacles,\n  findPath,\n  findPathAsync,\n};\n\nexport default Module;\n","// based on https://github.com/wesleykerr/level-generator/blob/master/core/src/main/java/com/seekerr/games/procedural/ForestGenerationImpl.java\n\nconst FOREST_STATE_EMPTY = 1;\nconst FOREST_STATE_FOREST = 2;\nconst FOREST_STATE_SEEDED = 3;\n\nexport class Tree {\n  x: number;\n  y: number;\n  age: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    this.age = 1;\n  }\n};\n\nexport class ForestGenerator {\n  initialTrees: number;\n  seedRadius: number = 5;\n  seedDecay: number = 0.3;\n  seedStrength: number = 0.1;\n\n  desiredCoverage: number = 0.2;\n  seed: number = 7;\n  width: number;\n  height: number;\n  forest: number[][];\n  trees: Array<Tree> = [];\n  seeds: Map<String, number> = new Map();\n\n  constructor(height: number = 100, width: number = 100, initialTrees: number = 10) {\n    this.height = height;\n    this.width = width;\n    this.initialTrees = initialTrees;\n\n    this.forest = Array(width).fill(FOREST_STATE_EMPTY);\n    this.forest = this.forest.map(col => Array(height).fill(FOREST_STATE_EMPTY));\n    for (let i = 0; i < this.initialTrees; i++) {\n      while (true) {\n        const x = Math.ceil(Math.random() * this.width);\n        const y = Math.ceil(Math.random() * this.height);\n        if (this.forest[x][y] === FOREST_STATE_EMPTY) {\n          this.forest[x][y] = FOREST_STATE_FOREST;\n          this.addTree(x, y);\n          break;\n        }\n      }\n    }\n  }\n\n  generate() {\n    let currentlyCovered = this.getCoverage();\n    while (currentlyCovered < this.desiredCoverage) {\n      this.step();\n      currentlyCovered = this.getCoverage();\n    }\n    this.removeSeeds();\n\n    return this.trees;\n  }\n\n  removeSeeds() {\n    for (let [coords] of this.seeds.entries()) {\n      const [x, y] = coords.split(',').map(x => parseInt(x));\n      this.forest[x][y] = FOREST_STATE_EMPTY;\n    }\n  }\n\n  getCoverage() {\n    const size = this.width * this.height;\n    return this.trees.length / size;\n  }\n\n  addTree(x: number, y: number) {\n    this.trees.push(new Tree(x, y));\n    this.forest[x][y] = FOREST_STATE_FOREST;\n  }\n\n  step() {\n    // гибель семян\n    const tmpMap: Map<String, number> = new Map();\n    for (const [coords, strength] of this.seeds.entries()) {\n      tmpMap.set(coords, strength - (this.seedDecay * strength));\n    }\n    this.seeds = tmpMap;\n\n    // рост деревьев\n    for (const [coords, strength] of this.seeds.entries()) {\n      if (Math.random() < strength) {\n        const [x, y] = coords.split(',').map(x => parseInt(x));\n        this.addTree(x, y);\n      }\n    }\n    this.trees = this.trees.map(tree => {\n      tree.age++;\n      return tree;\n    })\n\n    // убираем семена в случае, когда они проросли\n    for (const index in this.trees) {\n      const p = this.trees[index];\n      const key = p.x + \",\" + p.y;\n      if (this.seeds.has(key))\n        this.seeds.delete(key);\n    }\n\n    this.seedTrees();\n  }\n\n  seedTrees() {\n    for (const index in this.trees) {\n      const tree = this.trees[index];\n      const [xMin, xMax, yMin, yMax] = [\n        Math.max(tree.x - this.seedRadius, 0),\n        Math.min(tree.x + this.seedRadius, this.width),\n        Math.max(tree.y - this.seedRadius, 0),\n        Math.min(tree.y + this.seedRadius, this.height),\n      ];\n\n      for (let i = 0; i <= tree.age * 2; i++) {        \n        const x = Math.trunc(xMin + Math.random() * (xMax - xMin));\n        const y = Math.trunc(yMin + Math.random() * (yMax - yMin));\n        if (this.forest[x][y] === FOREST_STATE_FOREST)\n          continue;\n\n        this.forest[x][y] = FOREST_STATE_SEEDED;\n        const key = x + \",\" + y;\n        const value = this.seeds.get(key) || 0;\n        this.seeds.set(key, value + this.seedStrength);\n      }\n    }\n  }\n}","import Worker from './pathfinding.worker';\nimport { Tree } from '../ForestGenerator';\nimport { PathfindingModule } from './interfaces';\n\nconst worker = new Worker();\n\nasync function initPathfinding(): Promise<void> {\n  return Promise.resolve();\n}\n\nfunction startPathFinding(width: number, height: number): boolean {\n  worker.postMessage({\n    pathfinding: {\n      operation: 'start',\n      payload: {\n        width,\n        height,\n      },\n    },\n  });\n\n  return true;\n}\nfunction setObstacles(obstacles: Array<Tree>): boolean {\n  worker.postMessage({\n    pathfinding: {\n      operation: 'setObstacles',\n      payload: {\n        obstacles,\n      },\n    },\n  });\n\n  return true;\n}\n\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\n  return [[1, 1]];\n}\n\nasync function findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\n  return new Promise((res, rej) => {\n    worker.postMessage({\n      pathfinding: {\n        operation: 'findPath',\n        payload: {\n          from,\n          to,\n        },\n      },\n    });\n    worker.onmessage = (event: MessageEvent) => {\n      if (event.data.pathfindingResult && event.data.pathfindingResult.operation === 'findPath') {\n        res(event.data.pathfindingResult.result);\n      }\n    }\n  });\n}\n\nconst Module: PathfindingModule = {\n  initPathfinding,\n  startPathFinding,\n  setObstacles,\n  findPath,\n  findPathAsync,\n};\n\nexport default Module;\n","import { Tree } from \"../ForestGenerator\";\nimport \"go-pathfinding/wasm_exec\";\nimport { PathfindingModule } from \"./interfaces\";\n\nlet isInitialized = false\n\nasync function initPathfinding(): Promise<void> {\n  if (isInitialized) {\n    return Promise.resolve();\n  }\n  // @ts-ignore\n  const go = new Go();\n  const response = await fetch('node_modules/go-pathfinding/build/go-pathfinding.wasm');\n  const bytes = await response.arrayBuffer();\n  const result = await WebAssembly.instantiate(bytes, go.importObject);\n  isInitialized = true;\n  \n  go.run(result.instance);\n}\n\nfunction startPathFinding(width: number, height: number): boolean {\n  //@ts-ignore\n  window.setGrid(width, height);\n\n  return true;\n}\nfunction setObstacles(obstacles: Array<Tree>): boolean {\n  const obstaclesArray: Array<number> = obstacles.reduce((\n    aggr: Array<number>,\n    {x, y}\n  ) => {\n    aggr.push(x);\n    aggr.push(y);\n    return aggr;\n  }, []);\n  //@ts-ignore\n  window.setObstacles(...obstaclesArray);\n\n  return true;\n}\n\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\n  //@ts-ignore\n  const rawPath = window.findPath(from[0] / 2, from[2] / 2, to[0] / 2, to[2] / 2);\n  const path = [];\n  if (rawPath) {\n    for (let i=0, j=0; i<rawPath.length; i+=2, j++) {\n      path[j] = [parseInt(rawPath[i], 10), parseInt(rawPath[i+1], 10)];\n    }\n  }\n  return path;\n}\n\nfunction findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\n  return new Promise((res) => {\n    res(findPath(from, to));\n  });\n}\n\nconst Module: PathfindingModule = {\n  initPathfinding,\n  startPathFinding,\n  setObstacles,\n  findPath,\n  findPathAsync,\n};\n\nexport default Module;\n","// @ts-ignore\nimport { AsBind } from 'as-bind';\nimport { PathfindingModule, Finder } from \"./interfaces\";\nimport { Tree } from \"../ForestGenerator\";\n\nlet grid: Int8Array;\nlet finder: Finder;\nlet height = 1;\n\nasync function initPathfinding(): Promise<void> {\n  const { exports } = await AsBind.instantiate(fetch(\"node_modules/assemblyscript-pathfinding/build/as-pathfinding.wasm\"));\n  const { findPath } = exports;\n  finder = findPath;\n\n  return;\n}\n\nfunction startPathFinding(_width: number, _height: number): boolean {\n  grid = new Int8Array(_width * _height + 2);\n  grid[0] = _height;\n  grid[1] = _width;\n  height = _height;\n\n  return true;\n}\nfunction setObstacles(obstacles: Array<Tree>): boolean {\n  obstacles.forEach(({ x, y }) => {\n    grid[2 + (y * height + x)] = 1;\n  });\n\n  return true;\n}\n\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\n  const res = finder(\n    grid,\n    Math.trunc(from[2] / 2),\n    Math.trunc(from[0] / 2),\n    Math.trunc(to[2] / 2),\n    Math.trunc(to[0] / 2),\n  );\n\n  const path = [];\n  for (let i = 0; i < res.length - 1; i += 2) {\n    path.push([res[i], res[i + 1]]);\n  }\n\n  return path;\n}\n\nfunction findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\n  return new Promise((resolve, reject) => {\n    resolve(findPath(from, to));\n  });\n}\n\n\nconst Module: PathfindingModule = {\n  initPathfinding,\n  startPathFinding,\n  setObstacles,\n  findPath,\n  findPathAsync,\n};\n\nexport default Module;\n","import { PathfindingModule, Finder } from \"./interfaces\";\nimport { Tree } from \"../ForestGenerator\";\n// @ts-ignore\nimport { findPath as _findPath } from \"assemblyscript-pathfinding/build\";\n\nlet grid: Int8Array;\nlet finder: Finder;\nlet height = 1;\n\nasync function initPathfinding(): Promise<void> {\n  finder = _findPath;\n\n  return Promise.resolve();\n}\n\nfunction startPathFinding(_width: number, _height: number): boolean {\n  grid = new Int8Array(_width * _height + 2);\n  grid[0] = _height;\n  grid[1] = _width;\n  height = _height;\n\n  return true;\n}\nfunction setObstacles(obstacles: Array<Tree>): boolean {\n  obstacles.forEach(({ x, y }) => {\n    grid[2 + (y * height + x)] = 1;\n  });\n\n  return true;\n}\n\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\n  const res = finder(\n    grid,\n    Math.trunc(from[2] / 2),\n    Math.trunc(from[0] / 2),\n    Math.trunc(to[2] / 2),\n    Math.trunc(to[0] / 2),\n  );\n\n  const path = [];\n  for (let i = 0; i < res.length - 1; i += 2) {\n    path.push([res[i], res[i + 1]]);\n  }\n\n  return path;\n}\n\nfunction findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\n  return new Promise((resolve, reject) => {\n    resolve(findPath(from, to));\n  });\n}\n\n\nconst Module: PathfindingModule = {\n  initPathfinding,\n  startPathFinding,\n  setObstacles,\n  findPath,\n  findPathAsync,\n};\n\nexport default Module;\n","/*\nauto-generated by: https://github.com/react-spring/gltfjsx\nauthor: XNdrive (https://sketchfab.com/XNdrive)\nlicense: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)\nsource: https://sketchfab.com/3d-models/low-poly-tree-1-b512acc620ab4040ae942886ac5146f5\ntitle: Low Poly Tree 1\n*/\n\nimport React from 'react'\nimport { useLoader } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\n\nexport default function Tree(props) {\n  const { nodes, materials } = useLoader(GLTFLoader, '/models/pine/scene.gltf')\n  const { scale = [1, 1, 1] } = props;\n  nodes.tree_trunk001_0.geometry.computeBoundingBox();\n  const z = nodes.tree_leaves001_0.geometry.boundingBox.min.z * scale[1];\n\n  return (\n    <group rotation={[-Math.PI / 2, 0, 0]} {...props} scale={scale} dispose={null}>\n      <mesh geometry={nodes.tree_leaves001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow>\n        <meshPhysicalMaterial attach=\"material\" color=\"green\" />\n      </mesh>\n      <mesh material={materials['trunk.001']} geometry={nodes.tree_trunk001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow />\n    </group>\n  )\n}\n","import React, { memo, useEffect } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\nimport { AnimationMixer, Clock } from 'three';\n\nexport default memo(function PlayerModel(props) {\n  const { isWalking = false } = props;\n  const Abe = useLoader(FBXLoader, '/models/player/BreathingIdle.fbx');\n  const AbeWalking = useLoader(FBXLoader, '/models/player/WalkForward.fbx');\n  Abe.traverse(o => {\n    if (o.isMesh) {\n      o.castShadow = true;\n      o.receiveShadow = true;\n    }\n  });\n  const mixer = new AnimationMixer(Abe);\n  const idleAnimation = mixer.clipAction(Abe.animations[0]);\n  const walkAnimation = mixer.clipAction(AbeWalking.animations[0]);\n  \n  useEffect(() => {\n    if (isWalking) {\n      idleAnimation.stop();\n      walkAnimation.play();\n    } else {\n      walkAnimation.stop();\n      idleAnimation.play();\n    }\n    }, [isWalking]);\n  \n  const clock = new Clock();\n  useFrame(() => {\n    const delta = clock.getDelta();\n    mixer.update(delta);\n  });\n\n  return <group {...props}>\n    <primitive object={Abe} scale={[0.0075, 0.0075, 0.0075]} position={[0, -0.5, 0]} attach=\"target\" />\n  </group>;\n});\n","import React, { useState, useRef, useEffect, Suspense, memo, useMemo } from 'react'\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { Canvas, extend, useThree, useFrame } from 'react-three-fiber';\r\nimport { PerspectiveCamera } from 'drei';\r\nimport { ForestGenerator } from './utils/ForestGenerator';\r\nimport PathfindingJs from './utils/pathfinding/js';\r\nimport PathfindingThreaded from './utils/pathfinding/threaded';\r\nimport PathfindingGo from './utils/pathfinding/go';\r\nimport PathfindingAs from './utils/pathfinding/as';\r\nimport PathfindingAsTs from './utils/pathfinding/as-ts';\r\n\r\nimport './App.css';\r\nimport Tree from './models/Tree'\r\nimport PlayerModel from './models/Player'\r\n\r\nconst forest = new ForestGenerator(50, 50, 10);\r\nPathfindingGo.initPathfinding();\r\nPathfindingAs.initPathfinding();\r\nPathfindingAsTs.initPathfinding();\r\n\r\nextend({ OrbitControls });\r\n\r\nconst Controls = memo(({ position, target }) => {\r\n  const orbitRef = useRef();\r\n  const { camera, gl } = useThree();\r\n\r\n  useEffect(() => {\r\n    camera.lookAt(position)\r\n    orbitRef.current && orbitRef.current.target.copy(new THREE.Vector3(...target));\r\n  }, [position, target, orbitRef, camera]);\r\n\r\n  useFrame(() => {\r\n    orbitRef.current.update();\r\n  });\r\n\r\n  return (\r\n    <orbitControls\r\n      maxPolarAngle={Math.PI / 3}\r\n      minPolarAngle={Math.PI / 3}\r\n      args={[camera, gl.domElement]}\r\n      ref={orbitRef}\r\n    />\r\n  )\r\n});\r\n\r\nconst Pines = memo(({ finder }) => {\r\n  const [trees, setTrees] = useState([]);\r\n  useEffect(() => {\r\n    const map = forest.generate();\r\n    setTrees(map);\r\n    finder.setObstacles(map);\r\n  }, [finder]);\r\n\r\n  return (\r\n    <Suspense fallback={<></>}>\r\n      {trees.map(({ x, y, age }) => (<Tree\r\n        position={[\r\n          x * 2 + Math.random(),\r\n          0.2,\r\n          y * 2 + Math.random()\r\n        ]}\r\n        scale={[\r\n          0.2 + age * 0.1,\r\n          0.2 + age * 0.1,\r\n          0.2 + age * 0.1\r\n        ]}\r\n      />))}\r\n    </Suspense>\r\n  );\r\n});\r\n\r\nconst Path = ({ points, target }) => {\r\n  return <>\r\n    <mesh position={[target[0], -0.5, target[2]]} castShadow>\r\n      <boxBufferGeometry attach='geometry' args={[0.25, 0.1, 0.25]} />\r\n      <meshPhysicalMaterial attach='material' color='darkgreen' />\r\n    </mesh>\r\n    {points.slice(1).map(p => (\r\n      <mesh position={[p[1] * 2, -0.5, p[0] * 2]} castShadow>\r\n        <boxBufferGeometry attach='geometry' args={[0.25, 0.1, 0.25]} />\r\n        <meshPhysicalMaterial attach='material' color='green' />\r\n      </mesh>\r\n    ))}\r\n  </>\r\n}\r\n\r\nconst Plane = ({ handleClick, handleMove }) => {\r\n  return (\r\n    <mesh rotation={[-Math.PI / 2, 0, 0]} position={[50, -0.5, 50]} receiveShadow onClick={handleClick} onPointerMove={handleMove}>\r\n      <planeBufferGeometry attach='geometry' args={[100, 100, 100, 100]} />\r\n      <meshPhysicalMaterial attach='material' color='darkgreen' />\r\n    </mesh>\r\n  );\r\n}\r\n\r\nconst Camera = ({ position }) => {\r\n  return (\r\n    <PerspectiveCamera makeDefault position={position} fov={15} />\r\n  );\r\n}\r\n\r\nexport default () => {\r\n  const [playerPosition, setPlayerPosition] = useState([25, 0, 25]);\r\n  const [targetPosition, setTargetPosition] = useState([25, 0, 25]);\r\n  const [cameraPosition, setCameraPosition] = useState([60, 5, 75]);\r\n  const [path, setPath] = useState([]);\r\n  const [isWalking, setIsWalking] = useState(false);\r\n  const [isFinderReady, setFinderReady] = useState(false);\r\n  const [isWorkerBusy, setIsWorkerBusy] = useState(false);\r\n  const [finderMode, setFinderMode] = useState('threaded');\r\n  const Finder = useMemo(() => {\r\n    switch(finderMode) {\r\n      case 'js': return PathfindingJs;\r\n      case 'go': return PathfindingGo;\r\n      case 'assemblyscript': return PathfindingAs;\r\n      case 'assemblyscript compiled to js': return PathfindingAsTs;\r\n      default: return PathfindingThreaded;\r\n    }\r\n  }, [finderMode]);\r\n  function handleClick(e) {\r\n    setIsWalking(!isWalking);\r\n  }\r\n  async function handleMove(e) {\r\n    if (isWorkerBusy) {\r\n      return;\r\n    }\r\n    setIsWorkerBusy(true);\r\n    const newTarget = [e.point.x, e.point.y, e.point.z];\r\n    setTargetPosition(newTarget);\r\n    const path = await Finder.findPathAsync(playerPosition, newTarget);\r\n    setIsWorkerBusy(false);\r\n    setPath(path);\r\n  }\r\n\r\n  const lightTarget = new THREE.Object3D();\r\n  lightTarget.position.set(50, 0, 50);\r\n\r\n  useEffect(() => {\r\n    if (isFinderReady) {\r\n      Finder.startPathFinding(50, 50);\r\n    }\r\n  }, [isFinderReady, Finder]);\r\n\r\n  useEffect(() => {\r\n    Finder.initPathfinding().then(() => setFinderReady(true));\r\n  }, [Finder]);\r\n\r\n  return isFinderReady && (\r\n    <>\r\n    <div className=\"controls\">\r\n      {['js', 'threaded', 'go', 'assemblyscript', 'assemblyscript compiled to js'].map(mode => (\r\n        <span className={`control ${mode === finderMode ? 'selected' : ''}`} onClick={() => setFinderMode(mode)}>{mode}</span>\r\n      ))}\r\n    </div>\r\n    <Canvas\r\n      onCreated={({ gl }) => {\r\n        gl.shadowMap.enabled = true\r\n        gl.shadowMap.type = THREE.PCFSoftShadowMap\r\n        // gl.physicallyCorrectLights = true;\r\n      }}\r\n    >\r\n      <Camera position={cameraPosition} />\r\n      <ambientLight intensity={0.75} />\r\n      <spotLight\r\n        position={[50, 10, 50]}\r\n        penumbra={1}\r\n        decay={2}\r\n        castShadow\r\n      />\r\n      {/* <fog attach='fog' args={['black', 75, 100]} /> */}\r\n      <Controls position={playerPosition} target={playerPosition} />\r\n      <Suspense fallback={<></>}>\r\n        <PlayerModel position={playerPosition} isWalking={isWalking} />\r\n      </Suspense>\r\n      <Suspense fallback={<></>}>\r\n        <Plane handleClick={handleClick} handleMove={handleMove} />\r\n      </Suspense>\r\n      <Pines finder={Finder} />\r\n      <Path points={path} target={targetPosition} />\r\n    </Canvas>\r\n    </>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}