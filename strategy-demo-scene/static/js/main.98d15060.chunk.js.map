{"version":3,"sources":["utils/pathfinding/threaded.ts","reducers/players.js","models/NPC.jsx","context.js","Character.jsx","utils/ForestGenerator.ts","models/Tree.js","MultipleSelectTool.js","Landscape.jsx","Camera.jsx","App.js","serviceWorker.js","index.js","utils/pathfinding/pathfinding.worker.ts","utils/useFrame.worker.ts"],"names":["worker","Worker","a","Promise","resolve","from","to","res","rej","postMessage","pathfinding","operation","payload","onmessage","event","data","pathfindingResult","result","Module","initPathfinding","startPathFinding","width","height","setObstacles","obstacles","findPath","findPathAsync","movePlayer","playerId","path","type","playersReducer","state","movement","position","console","error","idleClip","AnimationClip","parse","idleAnimation","walkClip","walkAnimation","NPC","memo","id","props","isWalking","speed","instance","useState","Object3D","setInstance","loader","FBXLoader","useEffect","loadAsync","then","group","traverse","o","isMesh","castShadow","receiveShadow","useGetModel","model","mixer","AnimationMixer","clipAction","timeScale","stop","play","useMemo","clock","Clock","useFrame","delta","getDelta","update","object","scale","Context","createContext","Vector3","THREE","CatmullRomCurve3","Character","isSelected","onClick","characterRoot","setCharacterRoot","isHovered","setIsHovered","animationProgress","useRef","useContext","playersState","dispatch","v","pathSpline","current","map","point","length","useFrameWorker","lookAtPoint","getPoint","lookAt","set","x","y","z","lastPoint","lastPointVec","setPlayerPosition","enabled","fallback","ref","up","onPointerUp","e","onPointerDown","stopPropagation","onPointerOver","onPointerOut","visible","attach","args","penumbra","decay","angle","Math","PI","distance","Tree","age","this","ForestGenerator","initialTrees","seedRadius","seedDecay","seedStrength","desiredCoverage","seed","forest","trees","seeds","Map","Array","fill","col","i","ceil","random","addTree","er","currentlyCovered","getCoverage","step","removeSeeds","entries","split","parseInt","size","push","tmpMap","coords","strength","index","tree","p","key","has","delete","seedTrees","max","min","xMin","xMax","yMin","yMax","trunc","value","get","useLoader","GLTFLoader","nodes","materials","tree_trunk001_0","geometry","computeBoundingBox","tree_leaves001_0","boundingBox","rotation","dispose","color","material","MultipleSelectTool","isEnabled","start","end","isEqual","wireframe","Landscape","handleClick","handleMove","isMultipleSelectActive","onSelect","isRotated","isPointerDown","mstStart","setMstStart","mstEnd","setMstEnd","isSelecting","setIsSelecting","startX","startY","endX","endY","caughtPlayers","log","onPointerMove","Pines","setTrees","generate","Controls","target","orbitRef","useThree","camera","gl","copy","maxPolarAngle","minPolarAngle","domElement","Camera","makeDefault","fov","Pathfinding","extend","OrbitControls","Path","points","slice","activePlayers","setActivePlayers","cameraControlsPosition","targetPosition","setTargetPosition","cameraPosition","setPath","isWasmReady","setWasmReady","isWorkerBusy","setIsWorkerBusy","setMultipleSelectActive","playerIds","useReducer","reduce","acc","player","searchPath","handleCharClick","newActivePlayers","find","filter","concat","newTarget","onCreated","shadowMap","onKeyDown","nativeEvent","keyCode","onKeyUp","intensity","Provider","includes","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"gQAGMA,EAAS,I,OAAIC,G,4CAEnB,sBAAAC,EAAA,+EACSC,QAAQC,WADjB,4C,kEAkCA,WAA6BC,EAAgCC,GAA7D,SAAAJ,EAAA,+EACS,IAAIC,SAAQ,SAACI,EAAKC,GACvBR,EAAOS,YAAY,CACjBC,YAAa,CACXC,UAAW,WACXC,QAAS,CACPP,OACAC,SAINN,EAAOa,UAAY,SAACC,GACdA,EAAMC,KAAKC,mBAAgE,aAA3CF,EAAMC,KAAKC,kBAAkBL,WAC/DJ,EAAIO,EAAMC,KAAKC,kBAAkBC,aAbzC,4C,sBAmBA,IAQeC,EARmB,CAChCC,gB,2CACAC,iBAnDF,SAA0BC,EAAeC,GAWvC,OAVAtB,EAAOS,YAAY,CACjBC,YAAa,CACXC,UAAW,QACXC,QAAS,CACPS,QACAC,cAKC,GAyCPC,aAvCF,SAAsBC,GAUpB,OATAxB,EAAOS,YAAY,CACjBC,YAAa,CACXC,UAAW,eACXC,QAAS,CACPY,iBAKC,GA8BPC,SA3BF,SAAkBpB,EAAgCC,GAChD,MAAO,CAAC,CAAC,EAAG,KA2BZoB,c,+CC5DK,SAASC,EAAWC,EAAUC,GACnC,MAAO,CACLC,KAL4B,mBAM5BlB,QAAS,CACPgB,WACAC,SAcC,SAASE,EAAeC,EAAxB,GAAmD,IAAlBF,EAAiB,EAAjBA,KAAMlB,EAAW,EAAXA,QACxCG,EAAOiB,EAAMC,SAASrB,EAAQgB,UAClC,OAAQE,GACN,IAzB4B,mBA2B1B,OADAf,EAAOH,EAAQiB,KACR,eACFG,EADL,CAEEC,SAAS,eACJD,EAAMC,SADH,eAELrB,EAAQgB,SAAWb,MAG1B,IAjC4B,mBAmC1B,OADAA,EAAOH,EAAQsB,SACR,eACFF,EADL,CAEEE,SAAS,eACJF,EAAME,SADH,eAELtB,EAAQgB,SAAWb,MAG1B,QACEoB,QAAQC,MAAM,CAAEN,OAAMlB,a,qDCpCtByB,EAAWC,gBAAcC,MAAMC,GAC/BC,EAAWH,gBAAcC,MAAMG,GAsD9B,IAAMC,EAAMC,gBAhCnB,YAAyC,IAAjBC,EAAgB,EAAhBA,GAAOC,EAAS,wBACUA,EAAxCC,iBAD8B,WACUD,EAArBE,aADW,MACH,EADG,EAEhCC,EAtBR,SAAqBpB,EAAMgB,GAAK,IAAD,EACGK,mBAAS,IAAIC,YADhB,mBACtBF,EADsB,KACZG,EADY,KAEvBC,EAAS,IAAIC,IAenB,OAdAC,qBAAU,WACRF,EAAOG,UAAP,kBAA4B3B,EAA5B,SAAwC4B,MAAK,SAACC,GAC5CN,EAAYM,QAEb,CAACb,EAAIhB,IACR0B,qBAAU,WACRN,EAASU,UAAS,SAAAC,GACZA,EAAEC,SACJD,EAAEE,YAAa,EACfF,EAAEG,eAAgB,QAGrB,CAACd,IAEGA,EAKUe,CAD+BlB,EAAVmB,MACFpB,GAE9BqB,EAAQ,IAAIC,iBAAelB,GAC3BT,EAAgB0B,EAAME,WAAW/B,GACjCK,EAAgBwB,EAAME,WAAW3B,GACvCC,EAAc2B,UAAYrB,EAE1BO,qBAAU,WACJR,GACFP,EAAc8B,OACd5B,EAAc6B,SAEd7B,EAAc4B,OACd9B,EAAc+B,UAEf,CAACxB,IAEJyB,mBAAQ,WACNhC,EAAc+B,SACb,CAACtB,IAEJ,IAAMwB,EAAQ,IAAIC,QAMlB,OALAC,aAAS,WACP,IAAMC,EAAQH,EAAMI,WACpBX,EAAMY,OAAOF,MAGR,+CAAe9B,EAAf,CAAsBiC,OAAQ9B,EAAU+B,MAAO,CAAC,IAAM,IAAM,KAAO9C,SAAU,CAAC,GAAI,GAAK,SC1DnF+C,EAAUC,0BCKfC,EAA8BC,UAArBC,EAAqBD,mBAEzBE,EAAY1C,gBAAK,SAACE,GAAW,IAChCZ,EAAkEY,EAAlEZ,SAD+B,EACmCY,EAAxDyC,kBADqB,WACmCzC,EAApCE,aADC,MACO,IADP,EACYiB,EAAuBnB,EAAvBmB,MAAOpB,EAAgBC,EAAhBD,GAAI2C,EAAY1C,EAAZ0C,QADvB,EAEGtC,qBAFH,mBAEhCuC,EAFgC,KAEjBC,EAFiB,OAGLxC,oBAAS,GAHJ,mBAGhCyC,EAHgC,KAGrBC,EAHqB,KAIjCC,EAAoBC,iBAAO,GAJM,EAKJC,qBAAWd,GAAtCe,EAL+B,EAK/BA,aAAcC,EALiB,EAKjBA,SAChBpE,EAAOmE,EAAa/D,SAASY,GAC7BE,EAAYyB,mBAAQ,kBAAe,OAAT3C,IAAe,CAACA,IAK1CqE,EAAI,IAAIf,EACRgB,EAAa3B,mBAAQ,WAEzB,OADAqB,EAAkBO,QAAU,EACrB,IAAIf,EACTxD,EACEA,EAAKwE,KAAI,SAAAC,GAAK,OAAI,IAAInB,EAAmB,EAAXmB,EAAM,GAAQ,EAAc,EAAXA,EAAM,OACnD,IACF,EACA,gBAGH,CAACzE,IAEE+C,EAAQJ,mBAAQ,WACpB,OAAI3C,EACM,IAAQA,EAAK0E,OAAUvD,EAE1B,IACN,CAACnB,EAAMmB,IAsBV,IAAMhD,EAASwE,mBAAQ,kBAAM,IAAIgC,MAAkB,CAAC3D,IACpD7C,EAAOa,UAlBP,WACE,GAAIgB,EAAM,CACRgE,EAAkBO,QAAUP,EAAkBO,QAAUxB,EAExD,IAAM6B,EAAcZ,EAAkBO,QAKtC,GAJAD,EAAWO,SAASD,EAAaP,GACjCT,EAAckB,OAAOT,GAErBT,EAAcvD,SAAS0E,IAAIV,EAAEW,EAAGX,EAAEY,EAAGZ,EAAEa,GACnClB,EAAkBO,SAAW,EAAIxB,EAAO,CAC1C,IAAMoC,EAAYnF,EAAKA,EAAK0E,OAAS,GAC/BU,EAAe,IAAI9B,EAAuB,EAAf6B,EAAU,GAAQ,EAAkB,EAAfA,EAAU,IAfhDH,EAgBHI,EAAaJ,EAhBPC,EAgBUG,EAAaH,EAhBpBC,EAgBuBE,EAAaF,EAf9Dd,EH7BG,SAA2BrE,EAAUM,GAC1C,MAAO,CACLJ,KAb4B,mBAc5BlB,QAAS,CACPgB,WACAM,aGwBOgF,CAAkBrE,EAAI,CAACgE,EAAGC,EAAGC,KACtCd,EAAStE,EAAWkB,EAAI,OAepBgD,EAAkBO,QAAU,GAjBlC,IAAsBS,EAAGC,EAAGC,GAuB5BxD,qBAAU,WAGR,OAFAvD,EAAOS,YAAY,CAAEkE,SAAU,CAAEwC,QAASpE,KAEnC,kBAAM/C,EAAOS,YAAY,CAAEkE,SAAU,CAAEwC,SAAS,QACtD,CAACpE,IAcJ,OAAQ,kBAAC,WAAD,CAAUqE,SAAU,sCAC1B,2BACEC,IAAK3B,EACLxD,SAAUA,EACVoF,GAAI,CAAC,EAAG,EAAG,GACXC,YAjBoB,SAACC,GAAD,OAAOhC,EAAQgC,EAAG3E,IAkBtC4E,cAjBJ,SAA2BD,GACzBA,EAAEE,mBAiBAC,cAfJ,SAA2BH,GACzBA,EAAEE,kBACF9B,GAAa,IAcXgC,aAZJ,SAA0BJ,GACxBA,EAAEE,kBACF9B,GAAa,KAYX,0BAAMiC,QAAStC,GAAcI,EAAWzD,SAAU,CAAC,GAAI,GAAK,GAAI6B,eAAa,EAACD,YAAU,GACtF,sCAAkBgE,OAAO,WAAWC,KAAM,CAAC,GAAK,GAAK,GAAK,GAAI,EAAGpC,IAAcJ,KAC/E,0CAAsBuC,OAAO,cAE9BvC,GACD,+BACErD,SAAU,CAAC,EAAG,EAAG,GACjB8F,SAAU,EACVC,MAAO,EACPnE,YAAU,EACVoE,MAAOC,KAAKC,GACZC,SAAU,KAEZ,kBAAC1F,EAAD,CAAKsB,MAAOA,EAAOlB,UAAWA,EAAWC,MAAOA,EAAOH,GAAIA,S,cCjGpDyF,EAKX,WAAYzB,EAAWC,GAAY,yBAJnCD,OAIkC,OAHlCC,OAGkC,OAFlCyB,SAEkC,EAChCC,KAAK3B,EAAIA,EACT2B,KAAK1B,EAAIA,EACT0B,KAAKD,IAAM,GAIFE,EAAb,WAcE,aAAmF,IAAvEnH,EAAsE,uDAArD,IAAKD,EAAgD,uDAAhC,IAAKqH,EAA2B,uDAAJ,GAAI,yBAblFA,kBAakF,OAZlFC,WAAqB,EAY6D,KAXlFC,UAAoB,GAW8D,KAVlFC,aAAuB,GAU2D,KARlFC,gBAA0B,GAQwD,KAPlFC,KAAe,EAOmE,KANlF1H,WAMkF,OALlFC,YAKkF,OAJlF0H,YAIkF,OAHlFC,MAAqB,GAG6D,KAFlFC,MAA6B,IAAIC,IAG/BX,KAAKlH,OAASA,EACdkH,KAAKnH,MAAQA,EACbmH,KAAKE,aAAeA,EAEpBF,KAAKQ,OAASI,MAAM/H,GAAOgI,KAnCJ,GAoCvBb,KAAKQ,OAASR,KAAKQ,OAAO3C,KAAI,SAAAiD,GAAG,OAAIF,MAAM9H,GAAQ+H,KApC5B,MAqCvB,IAAK,IAAIE,EAAI,EAAGA,EAAIf,KAAKE,eAAgBa,EACvC,OAAa,CACX,IAAM1C,EAAIsB,KAAKqB,KAAKrB,KAAKsB,SAAWjB,KAAKnH,OACnCyF,EAAIqB,KAAKqB,KAAKrB,KAAKsB,SAAWjB,KAAKlH,QACzC,IACE,GA1CiB,IA0CbkH,KAAKQ,OAAOnC,GAAGC,GAA2B,CAC5C0B,KAAKQ,OAAOnC,GAAGC,GA1CC,EA2ChB0B,KAAKkB,QAAQ7C,EAAGC,GAChB,OAEF,MAAO6C,MA/BjB,uDAsCI,IADA,IAAIC,EAAmBpB,KAAKqB,cACrBD,EAAmBpB,KAAKM,iBAC7BN,KAAKsB,OACLF,EAAmBpB,KAAKqB,cAI1B,OAFArB,KAAKuB,cAEEvB,KAAKS,QA5ChB,oCA+CiB,IAAD,gBACST,KAAKU,MAAMc,WADpB,IACZ,2BAA2C,CAAC,IAAD,4BACnBC,MAAM,KAAK5D,KAAI,SAAAQ,GAAC,OAAIqD,SAASrD,MADV,mBAClCA,EADkC,KAC/BC,EAD+B,KAEzC0B,KAAKQ,OAAOnC,GAAGC,GAlEM,GA+DX,iCA/ChB,oCAuDI,IAAMqD,EAAO3B,KAAKnH,MAAQmH,KAAKlH,OAC/B,OAAOkH,KAAKS,MAAM1C,OAAS4D,IAxD/B,8BA2DUtD,EAAWC,GACjB0B,KAAKS,MAAMmB,KAAK,IAAI9B,EAAKzB,EAAGC,IAC5B0B,KAAKQ,OAAOnC,GAAGC,GA5ES,IAe5B,6BAkEI,IAFK,EAECuD,EAA8B,IAAIlB,IAFnC,cAG4BX,KAAKU,MAAMc,WAHvC,IAGL,2BAAuD,CAAC,IAAD,yBAA3CM,EAA2C,KAAnCC,EAAmC,KACrDF,EAAOzD,IAAI0D,EAAQC,EAAY/B,KAAKI,UAAY2B,IAJ7C,8BAML/B,KAAKU,MAAQmB,EANR,oBAS4B7B,KAAKU,MAAMc,WATvC,IASL,2BAAuD,CAAC,IAAD,yBAA3CM,EAA2C,KAAnCC,EAAmC,KACrD,GAAIpC,KAAKsB,SAAWc,EAAU,CAAC,IAAD,EACbD,EAAOL,MAAM,KAAK5D,KAAI,SAAAQ,GAAC,OAAIqD,SAASrD,MADvB,mBACrBA,EADqB,KAClBC,EADkB,KAE5B0B,KAAKkB,QAAQ7C,EAAGC,KAZf,8BAqBL,IAAK,IAAM0D,KANXhC,KAAKS,MAAQT,KAAKS,MAAM5C,KAAI,SAAAoE,GAE1B,OADAA,EAAKlC,MACEkC,KAIWjC,KAAKS,MAAO,CAC9B,IAAMyB,EAAIlC,KAAKS,MAAMuB,GACfG,EAAMD,EAAE7D,EAAI,IAAM6D,EAAE5D,EACtB0B,KAAKU,MAAM0B,IAAID,IACjBnC,KAAKU,MAAM2B,OAAOF,GAGtBnC,KAAKsC,cA5FT,kCAgGI,IAAK,IAAMN,KAAShC,KAAKS,MASvB,IARA,IAAMwB,EAAOjC,KAAKS,MAAMuB,GADM,EAEG,CAC/BrC,KAAK4C,IAAIN,EAAK5D,EAAI2B,KAAKG,WAAY,GACnCR,KAAK6C,IAAIP,EAAK5D,EAAI2B,KAAKG,WAAYH,KAAKnH,OACxC8G,KAAK4C,IAAIN,EAAK3D,EAAI0B,KAAKG,WAAY,GACnCR,KAAK6C,IAAIP,EAAK3D,EAAI0B,KAAKG,WAAYH,KAAKlH,SAJnC2J,EAFuB,KAEjBC,EAFiB,KAEXC,EAFW,KAELC,EAFK,KASrB7B,EAAI,EAAGA,GAAgB,EAAXkB,EAAKlC,IAASgB,IAAK,CACtC,IAAM1C,EAAIsB,KAAKkD,MAAMJ,EAAO9C,KAAKsB,UAAYyB,EAAOD,IAC9CnE,EAAIqB,KAAKkD,MAAMF,EAAOhD,KAAKsB,UAAY2B,EAAOD,IACpD,GA3HoB,IA2HhB3C,KAAKQ,OAAOnC,GAAGC,GAAnB,CAGA0B,KAAKQ,OAAOnC,GAAGC,GA7HK,EA8HpB,IAAM6D,EAAM9D,EAAI,IAAMC,EAChBwE,EAAQ9C,KAAKU,MAAMqC,IAAIZ,IAAQ,EACrCnC,KAAKU,MAAMtC,IAAI+D,EAAKW,EAAQ9C,KAAKK,oBAlHzC,K,QCPe,SAASP,EAAKxF,GAAQ,IAAD,EACL0I,YAAUC,IAAY,2BAA3CC,EAD0B,EAC1BA,MAAOC,EADmB,EACnBA,UADmB,EAEJ7I,EAAtBkC,aAF0B,MAElB,CAAC,EAAG,EAAG,GAFW,EAGlC0G,EAAME,gBAAgBC,SAASC,qBAC/B,IAAM/E,EAAI2E,EAAMK,iBAAiBF,SAASG,YAAYhB,IAAIjE,EAAI/B,EAAM,GAEpE,OACE,yCAAOiH,SAAU,EAAE9D,KAAKC,GAAK,EAAG,EAAG,IAAQtF,EAA3C,CAAkDkC,MAAOA,EAAOkH,QAAS,OACvE,0BAAML,SAAUH,EAAMK,iBAAiBF,SAAU3J,SAAU,CAAC,EAAG,GAAI6E,GAAIjD,YAAU,EAACC,eAAa,GAC7F,0CAAsB+D,OAAO,WAAWqE,MAAM,WAEhD,0BAAMC,SAAUT,EAAU,aAAcE,SAAUH,EAAME,gBAAgBC,SAAU3J,SAAU,CAAC,EAAG,GAAI6E,GAAIjD,YAAU,EAACC,eAAa,K,qBCpBzHsI,EAAqBzJ,gBAAK,YAAkD,IAA/C0J,EAA8C,EAA9CA,UAA8C,IAAnCC,aAAmC,MAA3B,CAAC,EAAG,GAAuB,MAAnBC,WAAmB,MAAb,CAAC,EAAG,GAAS,EACtF,OACE,0BACEP,SAAU,EAAE9D,KAAKC,GAAK,EAAG,EAAG,GAC5BP,QAASyE,IAAcG,IAAQF,EAAOC,GACtCtK,SAAU,CAACqK,EAAM,IAAOC,EAAI,GAAKD,EAAM,IAAM,EAAI,EAAGA,EAAM,IAAOC,EAAI,GAAKD,EAAM,IAAM,IAEtF,yCAAqBzE,OAAO,WAAWC,KAAM,CAACyE,EAAI,GAAKD,EAAM,GAAIC,EAAI,GAAKD,EAAM,GAAI,KACpF,0CAAsBzE,OAAO,WAAWqE,MAAM,QAAQO,WAAS,QCLxD1D,EAAS,IAAIP,EAAgB,GAAI,GAAI,IAErCkE,EAAY,SAAC,GAAmE,IAAjEC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,WAAYC,EAAuC,EAAvCA,uBAAwBC,EAAe,EAAfA,SACrEC,EAAYlH,kBAAO,GACnBmH,EAAgBnH,kBAAO,GAF6D,EAG1D5C,mBAAS,CAAC,EAAG,IAH6C,mBAGnFgK,EAHmF,KAGzEC,EAHyE,OAI9DjK,mBAAS,CAAC,EAAG,IAJiD,mBAInFkK,EAJmF,KAI3EC,EAJ2E,OAKpDnK,oBAAS,GAL2C,mBAKnFoK,EALmF,KAKtEC,EALsE,KAMlFvH,EAAiBD,qBAAWd,GAA5Be,aAoDR,OACE,kBAAC,WAAD,CAAUoB,SAAU,sCAClB,0BACE6E,SAAU,EAAE9D,KAAKC,GAAK,EAAG,EAAG,GAC5BlG,SAAU,CAAC,IAAK,GAAK,IACrB6B,eAAa,EACbwD,YAnCN,SAAyBC,GACvB,GAAIsF,EAAwB,CAC1BtF,EAAEE,kBACF6F,GAAe,GACf,IAAMC,EAASrF,KAAK6C,IAAIkC,EAAS,GAAIE,EAAO,IACtCK,EAAStF,KAAK6C,IAAIkC,EAAS,GAAIE,EAAO,IACtCM,EAAOvF,KAAK4C,IAAImC,EAAS,GAAIE,EAAO,IACpCO,EAAOxF,KAAK4C,IAAImC,EAAS,GAAIE,EAAO,IACpCQ,EAAgB,GACtB,IAAK,IAAM/K,KAAMmD,EAAa9D,SACxB8D,EAAa9D,SAASW,GAAI,GAAK2K,GAC/BxH,EAAa9D,SAASW,GAAI,GAAK6K,GAC/B1H,EAAa9D,SAASW,GAAI,GAAK4K,GAC/BzH,EAAa9D,SAASW,GAAI,GAAK8K,GAE/BC,EAAcxD,KAAKvH,GAKzB,OAFAV,QAAQ0L,IAAI,CAACD,uBACbb,EAASa,GAGNZ,EAAU5G,SACbwG,EAAYpF,GAEdwF,EAAU5G,SAAU,EACpB6G,EAAc7G,SAAU,GAUpBqB,cA9CN,SAA2BD,GACzB,GAAIsF,EAKF,OAJAtF,EAAEE,kBACFyF,EAAY,CAAC3F,EAAElB,MAAMO,EAAGW,EAAElB,MAAMS,IAChCsG,EAAU,CAAC7F,EAAElB,MAAMO,EAAGW,EAAElB,MAAMS,SAC9BwG,GAAe,GAGjBN,EAAc7G,SAAU,GAuCpB0H,cA1DN,SAA2BtG,GACzB,GAAIsF,EAGF,OAFAtF,EAAEE,uBACF2F,EAAU,CAAC7F,EAAElB,MAAMO,EAAGW,EAAElB,MAAMS,IAG5BkG,EAAc7G,UAChB4G,EAAU5G,SAAU,GAEtByG,EAAWrF,KAmDP,yCAAqBM,OAAO,WAAWC,KAAM,CAAC,IAAK,IAAK,IAAK,OAC7D,0CAAsBD,OAAO,WAAWqE,MAAM,eAEhD,kBAACE,EAAD,CAAoBC,UAAWgB,EAAaf,MAAOW,EAAUV,IAAKY,MAK3DW,EAAQnL,gBAAK,YAAuB,IAApBrB,EAAmB,EAAnBA,aAAmB,EACpB2B,mBAAS,IADW,mBACvC+F,EADuC,KAChC+E,EADgC,KAQ9C,OANAzK,qBAAU,WACR,IAAM8C,EAAM2C,EAAOiF,WACnBD,EAAS3H,GACT9E,EAAa8E,KACZ,IAGD,kBAAC,WAAD,CAAUe,SAAU,sCACjB6B,EAAM5C,KAAI,gBAAGQ,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGyB,EAAT,EAASA,IAAT,OAAoB,kBAAC,EAAD,CAC7BrG,SAAU,CACJ,EAAJ2E,EAAQsB,KAAKsB,SACb,GACI,EAAJ3C,EAAQqB,KAAKsB,UAEfzE,MAAO,CACL,GAAY,GAANuD,EACN,GAAY,GAANA,EACN,GAAY,GAANA,Y,wBClGH2F,EAAWtL,gBAAK,YAA6C,IAA1CV,EAAyC,EAAzCA,SAAUiM,EAA+B,EAA/BA,OAA+B,IAAvB7B,iBAAuB,SACjE8B,EAAWtI,mBADsD,EAEhDuI,cAAfC,EAF+D,EAE/DA,OAAQC,EAFuD,EAEvDA,GAWhB,OATAhL,qBAAU,WACR+K,EAAO3H,OAAOwH,GACdC,EAAShI,SAAWgI,EAAShI,QAAQ+H,OAAOK,KAAxB,YAAiCpJ,UAAjC,YAAkD+I,OACrE,CAACjM,EAAUiM,EAAQC,EAAUE,IAEhC3J,aAAS,WACPyJ,EAAShI,QAAQtB,YAIjB,mCACE2J,cAAetG,KAAKC,GAAK,EACzBsG,cAAevG,KAAKC,GAAK,EACzBL,KAAM,CAACuG,EAAQC,EAAGI,YAClBtH,IAAK+G,EACLjH,QAASmF,OAKFsC,EAAS,SAAC,GAAkB,IAAhB1M,EAAe,EAAfA,SACvB,OACE,kBAAC,IAAD,CAAmB2M,aAAW,EAAC3M,SAAUA,EAAU4M,IAAK,MCjBpD1N,I,OAAmE2N,EAAnE3N,kBAAkBG,GAAiDwN,EAAjDxN,aAAcG,GAAmCqN,EAAnCrN,cAAeP,GAAoB4N,EAApB5N,gBAEvD6N,YAAO,CAAEC,oBAET,IAAMC,GAAO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQhB,EAAa,EAAbA,OACtB,OAAO,oCACL,0BAAMjM,SAAU,CAACiM,EAAO,IAAK,GAAKA,EAAO,IAAKrK,YAAU,GACtD,uCAAmBgE,OAAO,WAAWC,KAAM,CAAC,IAAM,GAAK,OACvD,0CAAsBD,OAAO,WAAWqE,MAAM,eAE/CgD,EAAOC,MAAM,GAAG/I,KAAI,SAAAqE,GAAC,OACpB,0BAAMxI,SAAU,CAAQ,EAAPwI,EAAE,IAAS,GAAY,EAAPA,EAAE,IAAS5G,YAAU,GACpD,uCAAmBgE,OAAO,WAAWC,KAAM,CAAC,IAAM,GAAK,OACvD,0CAAsBD,OAAO,WAAWqE,MAAM,gBAMvC,cAAO,IAAD,EACuBjJ,mBAAS,CAAC,WADjC,mBACZmM,EADY,KACGC,EADH,OAEyCpM,mBAAS,CAAC,GAAI,EAAG,KAF1D,mBAEZqM,EAFY,aAGyBrM,mBAAS,CAAC,GAAI,EAAG,MAH1C,mBAGZsM,EAHY,KAGIC,EAHJ,OAIyBvM,mBAAS,CAAC,GAAI,EAAG,KAJ1C,mBAIZwM,EAJY,aAKKxM,mBAAS,KALd,mBAKZrB,EALY,KAKN8N,EALM,OAMiBzM,oBAAS,GAN1B,mBAMZ0M,EANY,KAMCC,EAND,OAOqB3M,oBAAS,GAP9B,mBAOZ4M,EAPY,KAOEC,EAPF,OAQuC7M,oBAAS,GARhD,mBAQZ4J,EARY,KAQYkD,EARZ,KAUbC,EAAY,CAChB,SACA,UACA,aACA,aACA,aACA,cAhBiB,EAkBcC,qBAAWnO,EAAgB,CAC1DE,SAAUgO,EAAUE,QAAO,SAACC,EAAKvN,GAAN,sBAAmBuN,EAAnB,eAAyBvN,EAAK,SAAS,IAClEX,SAAU+N,EAAUE,QAAO,SAACC,EAAKvN,EAAI2H,GAAV,sBAA0B4F,EAA1B,eAAgCvN,EAAK,CAAC,GAAK2H,EAAO,EAAG,GAAKA,OAAW,MApB/E,mBAkBZxE,EAlBY,KAkBEC,EAlBF,iDAuBnB,WAAgCuB,GAAhC,qBAAAtH,EAAA,yDACEsH,EAAEE,mBACEoI,EAFN,+DAKuBT,GALvB,gEAKagB,EALb,kBAMuBC,GACjBtK,EAAa9D,SAASmO,GACtB,CAAC7I,EAAElB,MAAMO,EAAGW,EAAElB,MAAMQ,EAAGU,EAAElB,MAAMS,IARrC,SAMUlF,EANV,SAWMoE,EAAStE,EAAW0O,EAAQxO,IAXlC,wMAvBmB,sBAsCnB,SAAS0O,GAAgB/I,EAAG5F,GAE1B,GADA4F,EAAEE,kBACEoF,EAAwB,CAC1B,IAAM0D,EAAmBnB,EAAcoB,MAAK,SAAA5N,GAAE,OAAIA,IAAOjB,KACrDyN,EAAcqB,QAAO,SAAA7N,GAAE,OAAIA,IAAOjB,KAClCyN,EAAcsB,OAAO,CAAC/O,IAC1B0N,EAAiBkB,QAEjBlB,EAAiB,CAAC1N,IA9CH,SAiDJ0O,GAjDI,mFAiDnB,WAA0BjQ,EAAMC,GAAhC,eAAAJ,EAAA,0DACM4P,EADN,yCAEW,IAFX,cAIEC,GAAgB,GAJlB,SAKqBrO,GAAcrB,EAAMC,GALzC,cAKQuB,EALR,OAMEkO,GAAgB,GANlB,kBAOSlO,GAPT,4CAjDmB,oEA0DnB,WAA0B2F,GAA1B,iBAAAtH,EAAA,6DACQ0Q,EAAY,CAACpJ,EAAElB,MAAMO,EAAGW,EAAElB,MAAMQ,EAAGU,EAAElB,MAAMS,GADnD,SAEqBuJ,GAAWtK,EAAa9D,SAASmN,EAAc,IAAKuB,GAFzE,OAEQ/O,EAFR,OAGE4N,EAAkBmB,GAClBjB,EAAQ9N,GAJV,4CA1DmB,sBAuFnB,OAtBA0B,qBAAU,WACJqM,GACFxO,GAAiB,GAAI,MAEtB,CAACwO,IACJrM,qBAAU,WACRpC,KAAkBsC,MAAK,kBAAMoM,GAAa,QACzC,IAeID,GACL,kBAAC,IAAD,CACEiB,UAAW,YAAa,IAAVtC,EAAS,EAATA,GACZA,EAAGuC,UAAU3J,SAAU,EACvBoH,EAAGuC,UAAUhP,KAAOsD,oBAGtB0L,WAAS,EACTC,UArBJ,SAAuBvJ,GACS,KAA1BA,EAAEwJ,YAAYC,SAAmBnE,GAEnCkD,GAAwB,IAmBxBkB,QAhBJ,SAAqB1J,GACW,KAA1BA,EAAEwJ,YAAYC,SAAkBnE,GAEpCkD,GAAwB,KAetB,kBAAC,EAAD,CAAQ9N,SAAUwN,IAClB,kBAACxB,EAAD,CAAUhM,SAAUqN,EAAwBpB,OAAQoB,EAAwBjD,WAAYQ,IACxF,kCAAcqE,UAAW,MAGzB,kBAAClM,EAAQmM,SAAT,CAAkB9F,MAAO,CAAErF,WAAUD,iBAClCiK,EAAU5J,KAAI,SAACxD,GAAD,OAAQ,kBAACyC,EAAD,CACrBzC,GAAIA,EACJX,SAAU8D,EAAa9D,SAASW,GAChCoB,MAAM,kBACNsB,WAAY8J,EAAcgC,SAASxO,GACnC2C,QAAS+K,QAEX,kBAAC,EAAD,CACE3D,YAhHW,4CAiHXC,WAjHW,6CAkHXC,uBAAwBA,EACxBC,SAAUuC,KAGd,kBAACvB,EAAD,CAAOxM,aAAcA,KACrB,kBAAC,GAAD,CAAM4N,OAAQtN,EAAMsM,OAAQqB,MC5Id8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzO,MAAK,SAAA0O,GACJA,EAAaC,gBAEdC,OAAM,SAAAjQ,GACLD,QAAQC,MAAMA,EAAMkQ,a,mBEzI5BC,EAAOC,QAAU,WACf,OAAO,IAAIvS,OAAO,IAA0B,oC,mBCD9CsS,EAAOC,QAAU,WACf,OAAO,IAAIvS,OAAO,IAA0B,oC","file":"static/js/main.98d15060.chunk.js","sourcesContent":["import Worker from './pathfinding.worker';\r\nimport { PathfindingModule, Obstacle } from './interfaces';\r\n\r\nconst worker = new Worker();\r\n\r\nasync function initPathfinding(): Promise<void> {\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction startPathFinding(width: number, height: number): boolean {\r\n  worker.postMessage({\r\n    pathfinding: {\r\n      operation: 'start',\r\n      payload: {\r\n        width,\r\n        height,\r\n      },\r\n    },\r\n  });\r\n\r\n  return true;\r\n}\r\nfunction setObstacles(obstacles: Array<Obstacle>): boolean {\r\n  worker.postMessage({\r\n    pathfinding: {\r\n      operation: 'setObstacles',\r\n      payload: {\r\n        obstacles,\r\n      },\r\n    },\r\n  });\r\n\r\n  return true;\r\n}\r\n\r\nfunction findPath(from: [number, number, number], to: [number, number, number]): Array<number[]> {\r\n  return [[1, 1]];\r\n}\r\n\r\nasync function findPathAsync(from: [number, number, number], to: [number, number, number]): Promise<Array<number[]>> {\r\n  return new Promise((res, rej) => {\r\n    worker.postMessage({\r\n      pathfinding: {\r\n        operation: 'findPath',\r\n        payload: {\r\n          from,\r\n          to,\r\n        },\r\n      },\r\n    });\r\n    worker.onmessage = (event: MessageEvent) => {\r\n      if (event.data.pathfindingResult && event.data.pathfindingResult.operation === 'findPath') {\r\n        res(event.data.pathfindingResult.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nconst Module: PathfindingModule = {\r\n  initPathfinding,\r\n  startPathFinding,\r\n  setObstacles,\r\n  findPath,\r\n  findPathAsync,\r\n};\r\n\r\nexport default Module;\r\n","export const PLAYERS_MOVEMENT = 'players movement';\nexport const PLAYERS_POSITION = 'players position';\n\nexport function movePlayer(playerId, path) {\n  return {\n    type: PLAYERS_MOVEMENT,\n    payload: {\n      playerId,\n      path,\n    }\n  }\n}\nexport function setPlayerPosition(playerId, position) {\n  return {\n    type: PLAYERS_POSITION,\n    payload: {\n      playerId,\n      position,\n    }\n  }\n}\n\nexport function playersReducer(state, { type, payload }) {\n  let data = state.movement[payload.playerId];\n  switch (type) {\n    case PLAYERS_MOVEMENT:\n      data = payload.path;\n      return {\n        ...state,\n        movement: {\n          ...state.movement,\n          [payload.playerId]: data,\n        }\n      };\n    case PLAYERS_POSITION:\n      data = payload.position;\n      return {\n        ...state,\n        position: {\n          ...state.position,\n          [payload.playerId]: data,\n        }\n      };\n    default:\n      console.error({ type, payload });\n  }\n}\n","import React, { memo, useEffect, useMemo, useState } from 'react'\nimport { useLoader, useFrame } from 'react-three-fiber'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\nimport { AnimationMixer, Clock, AnimationClip, Object3D } from 'three'\n\nimport idleAnimation from '../animations/idle-arm-stretching.json'\nimport walkAnimation from '../animations/walk.json'\n\nconst idleClip = AnimationClip.parse(idleAnimation);\nconst walkClip = AnimationClip.parse(walkAnimation);\n\nfunction useGetModel(path, id) {\n  const [instance, setInstance] = useState(new Object3D());\n  const loader = new FBXLoader();\n  useEffect(() => {\n    loader.loadAsync(`/models/${path}.fbx`).then((group) => {\n      setInstance(group);\n    });\n  }, [id, path]);\n  useEffect(() => {\n    instance.traverse(o => {\n      if (o.isMesh) {\n        o.castShadow = true;\n        o.receiveShadow = true;\n      }\n    });\n  }, [instance]);\n\n  return instance;\n}\n\nfunction NPCComponent({ id, ...props }) {\n  const { isWalking = false, speed = 1, model } = props;\n  const instance = useGetModel(model, id);\n\n  const mixer = new AnimationMixer(instance);\n  const idleAnimation = mixer.clipAction(idleClip);\n  const walkAnimation = mixer.clipAction(walkClip);\n  walkAnimation.timeScale = speed;\n\n  useEffect(() => {\n    if (isWalking) {\n      idleAnimation.stop();\n      walkAnimation.play();\n    } else {\n      walkAnimation.stop();\n      idleAnimation.play();\n    }\n  }, [isWalking]);\n\n  useMemo(() => {    \n    idleAnimation.play();\n  }, [instance]);\n\n  const clock = new Clock();\n  useFrame(() => {\n    const delta = clock.getDelta();\n    mixer.update(delta);\n  });\n\n  return <primitive {...props} object={instance} scale={[0.05, 0.05, 0.05]} position={[0, -0.5, 0]} />;\n}\n\nexport const NPC = memo(NPCComponent);\n","import { createContext } from 'react';\n\nexport const Context = createContext();\n","import React, { memo, Suspense, useState, useMemo, useEffect, useRef, useContext } from 'react';\nimport * as THREE from 'three';\nimport useFrameWorker from './utils/useFrame.worker';\nimport { NPC } from './models/NPC';\nimport { Context } from './context';\nimport { movePlayer, setPlayerPosition } from './reducers/players';\n\nconst { Vector3, CatmullRomCurve3 } = THREE;\n\nexport const Character = memo((props) => {\n  const { position, isSelected = false, speed = 1.5, model, id, onClick } = props;\n  const [characterRoot, setCharacterRoot] = useState();\n  const [isHovered, setIsHovered] = useState(false);\n  const animationProgress = useRef(0);\n  const { playersState, dispatch } = useContext(Context);\n  const path = playersState.movement[id];\n  const isWalking = useMemo(() => path !== null, [path]);\n\n  /**\n   * Кривая, повторяющая путь; для определения нужного угла поворота модели игрока\n   */\n  const v = new Vector3();\n  const pathSpline = useMemo(() => {\n    animationProgress.current = 0;\n    return new CatmullRomCurve3(\n      path\n      ? path.map(point => new Vector3(point[1] * 2, 0, point[0] * 2))\n        : [],\n        false,\n        'catmullrom'\n    );\n    \n  }, [path]);\n\n  const delta = useMemo(() => {\n    if (path) {\n      return (0.01  / path.length) * speed;\n    }\n    return 0;\n  }, [path, speed]);\n  function onStopMoving(x, y, z) {\n    dispatch(setPlayerPosition(id, [x, y, z]));\n    dispatch(movePlayer(id, null));\n  }\n  function handleAnimationTick() {\n    if (path) {\n      animationProgress.current = animationProgress.current + delta;\n      // поворот модели\n      const lookAtPoint = animationProgress.current;\n      pathSpline.getPoint(lookAtPoint, v);\n      characterRoot.lookAt(v);\n      // перемещение модели\n      characterRoot.position.set(v.x, v.y, v.z);\n      if (animationProgress.current >= 1 - delta) { // because pathSpline.getPoint(1.01) === pathSpline.getPoint(0.01)\n        const lastPoint = path[path.length - 1];\n        const lastPointVec = new Vector3(lastPoint[1] * 2, 0, lastPoint[0] * 2)\n        onStopMoving(lastPointVec.x, lastPointVec.y, lastPointVec.z);\n        animationProgress.current = 0;\n      }\n    }\n  }\n  const worker = useMemo(() => new useFrameWorker(), [id]);\n  worker.onmessage = handleAnimationTick;\n  useEffect(() => {\n    worker.postMessage({ useFrame: { enabled: isWalking } });\n\n    return () => worker.postMessage({ useFrame: { enabled: false } });\n  }, [isWalking]);\n\n  const handlePointerUp = (e) => onClick(e, id);\n  function handlePointerDown(e) {\n    e.stopPropagation();\n  }\n  function handlePointerOver(e) {\n    e.stopPropagation();\n    setIsHovered(true);\n  }\n  function handlePointerOut(e) {\n    e.stopPropagation();\n    setIsHovered(false);\n  }\n  return (<Suspense fallback={<></>}>\n    <group\n      ref={setCharacterRoot}\n      position={position}\n      up={[0, 1, 0]}\n      onPointerUp={handlePointerUp}\n      onPointerDown={handlePointerDown}\n      onPointerOver={handlePointerOver}\n      onPointerOut={handlePointerOut}\n    >\n      <mesh visible={isSelected || isHovered} position={[0, -0.5, 0]} receiveShadow castShadow>\n        <cylinderGeometry attach=\"geometry\" args={[0.5, 0.5, 0.1, 30, 1, isHovered && !isSelected]} />\n        <meshPhysicalMaterial attach=\"material\" />\n      </mesh>\n      {isSelected && \n      <spotLight\n        position={[0, 3, 0]}\n        penumbra={1}\n        decay={1}\n        castShadow\n        angle={Math.PI}\n        distance={50}\n      />}\n      <NPC model={model} isWalking={isWalking} speed={speed} id={id} />\n    </group>\n  </Suspense>);\n});\n","// based on https://github.com/wesleykerr/level-generator/blob/master/core/src/main/java/com/seekerr/games/procedural/ForestGenerationImpl.java\r\nimport { Obstacle } from './pathfinding/interfaces';\r\n\r\nconst FOREST_STATE_EMPTY = 1;\r\nconst FOREST_STATE_FOREST = 2;\r\nconst FOREST_STATE_SEEDED = 3;\r\n\r\nexport class Tree implements Obstacle {\r\n  x: number;\r\n  y: number;\r\n  age: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.age = 1;\r\n  }\r\n};\r\n\r\nexport class ForestGenerator {\r\n  initialTrees: number;\r\n  seedRadius: number = 5;\r\n  seedDecay: number = 0.3;\r\n  seedStrength: number = 0.1;\r\n\r\n  desiredCoverage: number = 0.2;\r\n  seed: number = 7;\r\n  width: number;\r\n  height: number;\r\n  forest: number[][];\r\n  trees: Array<Tree> = [];\r\n  seeds: Map<String, number> = new Map();\r\n\r\n  constructor(height: number = 100, width: number = 100, initialTrees: number = 10) {\r\n    this.height = height;\r\n    this.width = width;\r\n    this.initialTrees = initialTrees;\r\n\r\n    this.forest = Array(width).fill(FOREST_STATE_EMPTY);\r\n    this.forest = this.forest.map(col => Array(height).fill(FOREST_STATE_EMPTY));\r\n    for (let i = 0; i < this.initialTrees; ++i) {\r\n      while (true) {\r\n        const x = Math.ceil(Math.random() * this.width);\r\n        const y = Math.ceil(Math.random() * this.height);\r\n        try {\r\n          if (this.forest[x][y] === FOREST_STATE_EMPTY) {\r\n            this.forest[x][y] = FOREST_STATE_FOREST;\r\n            this.addTree(x, y);\r\n            break;\r\n          }\r\n        } catch (er) {}\r\n      }\r\n    }\r\n  }\r\n\r\n  generate() {\r\n    let currentlyCovered = this.getCoverage();\r\n    while (currentlyCovered < this.desiredCoverage) {\r\n      this.step();\r\n      currentlyCovered = this.getCoverage();\r\n    }\r\n    this.removeSeeds();\r\n\r\n    return this.trees;\r\n  }\r\n\r\n  removeSeeds() {\r\n    for (let [coords] of this.seeds.entries()) {\r\n      const [x, y] = coords.split(',').map(x => parseInt(x));\r\n      this.forest[x][y] = FOREST_STATE_EMPTY;\r\n    }\r\n  }\r\n\r\n  getCoverage() {\r\n    const size = this.width * this.height;\r\n    return this.trees.length / size;\r\n  }\r\n\r\n  addTree(x: number, y: number) {\r\n    this.trees.push(new Tree(x, y));\r\n    this.forest[x][y] = FOREST_STATE_FOREST;\r\n  }\r\n\r\n  step() {\r\n    // гибель семян\r\n    const tmpMap: Map<String, number> = new Map();\r\n    for (const [coords, strength] of this.seeds.entries()) {\r\n      tmpMap.set(coords, strength - (this.seedDecay * strength));\r\n    }\r\n    this.seeds = tmpMap;\r\n\r\n    // рост деревьев\r\n    for (const [coords, strength] of this.seeds.entries()) {\r\n      if (Math.random() < strength) {\r\n        const [x, y] = coords.split(',').map(x => parseInt(x));\r\n        this.addTree(x, y);\r\n      }\r\n    }\r\n    this.trees = this.trees.map(tree => {\r\n      tree.age++;\r\n      return tree;\r\n    })\r\n\r\n    // убираем семена в случае, когда они проросли\r\n    for (const index in this.trees) {\r\n      const p = this.trees[index];\r\n      const key = p.x + \",\" + p.y;\r\n      if (this.seeds.has(key))\r\n        this.seeds.delete(key);\r\n    }\r\n\r\n    this.seedTrees();\r\n  }\r\n\r\n  seedTrees() {\r\n    for (const index in this.trees) {\r\n      const tree = this.trees[index];\r\n      const [xMin, xMax, yMin, yMax] = [\r\n        Math.max(tree.x - this.seedRadius, 0),\r\n        Math.min(tree.x + this.seedRadius, this.width),\r\n        Math.max(tree.y - this.seedRadius, 0),\r\n        Math.min(tree.y + this.seedRadius, this.height),\r\n      ];\r\n\r\n      for (let i = 0; i <= tree.age * 2; i++) {        \r\n        const x = Math.trunc(xMin + Math.random() * (xMax - xMin));\r\n        const y = Math.trunc(yMin + Math.random() * (yMax - yMin));\r\n        if (this.forest[x][y] === FOREST_STATE_FOREST)\r\n          continue;\r\n\r\n        this.forest[x][y] = FOREST_STATE_SEEDED;\r\n        const key = x + \",\" + y;\r\n        const value = this.seeds.get(key) || 0;\r\n        this.seeds.set(key, value + this.seedStrength);\r\n      }\r\n    }\r\n  }\r\n}","/*\r\nauto-generated by: https://github.com/react-spring/gltfjsx\r\nauthor: XNdrive (https://sketchfab.com/XNdrive)\r\nlicense: CC-BY-SA-4.0 (http://creativecommons.org/licenses/by-sa/4.0/)\r\nsource: https://sketchfab.com/3d-models/low-poly-tree-1-b512acc620ab4040ae942886ac5146f5\r\ntitle: Low Poly Tree 1\r\n*/\r\n\r\nimport React from 'react'\r\nimport { useLoader } from 'react-three-fiber'\r\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\r\n\r\nexport default function Tree(props) {\r\n  const { nodes, materials } = useLoader(GLTFLoader, '/models/pine/scene.gltf')\r\n  const { scale = [1, 1, 1] } = props;\r\n  nodes.tree_trunk001_0.geometry.computeBoundingBox();\r\n  const z = nodes.tree_leaves001_0.geometry.boundingBox.min.z * scale[1];\r\n\r\n  return (\r\n    <group rotation={[-Math.PI / 2, 0, 0]} {...props} scale={scale} dispose={null}>\r\n      <mesh geometry={nodes.tree_leaves001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow>\r\n        <meshPhysicalMaterial attach=\"material\" color=\"green\" />\r\n      </mesh>\r\n      <mesh material={materials['trunk.001']} geometry={nodes.tree_trunk001_0.geometry} position={[0, 0, -z]} castShadow receiveShadow />\r\n    </group>\r\n  )\r\n}\r\n","import React, { memo } from 'react';\nimport isEqual from 'lodash/isEqual';\n\nexport const MultipleSelectTool = memo(({ isEnabled, start = [0, 0], end = [0, 0] }) => {\n  return (\n    <mesh\n      rotation={[-Math.PI / 2, 0, 0]}\n      visible={isEnabled && !isEqual(start, end)}\n      position={[start[0] + ((end[0] - start[0]) / 2), 0, start[1] + ((end[1] - start[1]) / 2)]}\n    >\n      <planeBufferGeometry attach='geometry' args={[end[0] - start[0], end[1] - start[1], 1]} />\n      <meshPhysicalMaterial attach='material' color='green' wireframe />\n    </mesh>\n  );\n});\n","import React, { useRef, Suspense, memo, useEffect, useState, useContext } from 'react';\nimport { ForestGenerator } from './utils/ForestGenerator';\nimport Tree from './models/Tree'\nimport { MultipleSelectTool } from './MultipleSelectTool';\nimport { Context } from './context';\n\nexport const forest = new ForestGenerator(50, 50, 10);\n\nexport const Landscape = ({ handleClick, handleMove, isMultipleSelectActive, onSelect }) => {\n  const isRotated = useRef(false);\n  const isPointerDown = useRef(false);\n  const [mstStart, setMstStart] = useState([0, 0]);\n  const [mstEnd, setMstEnd] = useState([0, 0]);\n  const [isSelecting, setIsSelecting] = useState(false);\n  const { playersState } = useContext(Context);\n\n  function handlePointerMove(e) {    \n    if (isMultipleSelectActive) {\n      e.stopPropagation();\n      setMstEnd([e.point.x, e.point.z]);\n      return;\n    }\n    if (isPointerDown.current) {\n      isRotated.current = true;\n    }\n    handleMove(e);\n  }\n  function handlePointerDown(e) {\n    if (isMultipleSelectActive) {\n      e.stopPropagation();\n      setMstStart([e.point.x, e.point.z]);\n      setMstEnd([e.point.x, e.point.z]);\n      setIsSelecting(true);\n      return;\n    }\n    isPointerDown.current = true;\n  }\n  function handlePointerUp(e) {\n    if (isMultipleSelectActive) {\n      e.stopPropagation();\n      setIsSelecting(false);\n      const startX = Math.min(mstStart[0], mstEnd[0]);\n      const startY = Math.min(mstStart[1], mstEnd[1]);\n      const endX = Math.max(mstStart[0], mstEnd[0]);\n      const endY = Math.max(mstStart[1], mstEnd[1]);\n      const caughtPlayers = [];\n      for (const id in playersState.position) {\n        if (playersState.position[id][0] > startX &&\n            playersState.position[id][0] < endX &&\n            playersState.position[id][2] > startY &&\n            playersState.position[id][2] < endY\n          ) {\n            caughtPlayers.push(id);\n          }\n      }\n      console.log({caughtPlayers})\n      onSelect(caughtPlayers);\n      return;\n    }\n    if (!isRotated.current) {\n      handleClick(e);\n    }\n    isRotated.current = false;\n    isPointerDown.current = false;\n  }\n\n  return (\n    <Suspense fallback={<></>}>\n      <mesh\n        rotation={[-Math.PI / 2, 0, 0]}\n        position={[50, -0.5, 50]}\n        receiveShadow\n        onPointerUp={handlePointerUp}\n        onPointerDown={handlePointerDown}\n        onPointerMove={handlePointerMove}\n      >\n        <planeBufferGeometry attach='geometry' args={[100, 100, 100, 100]} />\n        <meshPhysicalMaterial attach='material' color='darkgreen' />\n      </mesh>\n      <MultipleSelectTool isEnabled={isSelecting} start={mstStart} end={mstEnd} />\n    </Suspense>\n  );\n}\n\nexport const Pines = memo(({ setObstacles }) => {\n  const [trees, setTrees] = useState([]);\n  useEffect(() => {\n    const map = forest.generate();\n    setTrees(map);\n    setObstacles(map);\n  }, []);\n\n  return (\n    <Suspense fallback={<></>}>\n      {trees.map(({ x, y, age }) => (<Tree\n        position={[\n          x * 2 + Math.random(),\n          0.2,\n          y * 2 + Math.random()\n        ]}\n        scale={[\n          0.2 + age * 0.1,\n          0.2 + age * 0.1,\n          0.2 + age * 0.1\n        ]}\n      />))}\n    </Suspense>\n  );\n});\n","import React, { memo, useRef, useEffect } from 'react';\nimport { useThree, useFrame } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { PerspectiveCamera } from 'drei';\n\nexport const Controls = memo(({ position, target, isEnabled = true }) => {\n  const orbitRef = useRef();\n  const { camera, gl } = useThree();\n\n  useEffect(() => {\n    camera.lookAt(target);\n    orbitRef.current && orbitRef.current.target.copy(new THREE.Vector3(...target));\n  }, [position, target, orbitRef, camera]);\n\n  useFrame(() => {\n    orbitRef.current.update();\n  });\n\n  return (\n    <orbitControls\n      maxPolarAngle={Math.PI / 3}\n      minPolarAngle={Math.PI / 3}\n      args={[camera, gl.domElement]}\n      ref={orbitRef}\n      enabled={isEnabled}\n    />\n  )\n});\n\nexport const Camera = ({ position }) => {\n  return (\n    <PerspectiveCamera makeDefault position={position} fov={15} />\n  );\n}\n","import React, { useState, useEffect, useReducer } from 'react'\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'\r\nimport { Canvas, extend } from 'react-three-fiber';\r\nimport Pathfinding from './utils/pathfinding/threaded';\r\nimport { movePlayer } from './reducers/players';\r\nimport { Character } from './Character';\r\nimport { Landscape, Pines } from './Landscape';\r\nimport { Controls, Camera } from './Camera';\r\nimport { Context } from './context';\r\nimport { playersReducer } from './reducers/players';\r\n\r\nimport './App.css';\r\n\r\nconst { startPathFinding, setObstacles, findPathAsync, initPathfinding } = Pathfinding;\r\n\r\nextend({ OrbitControls });\r\n\r\nconst Path = ({ points, target }) => {\r\n  return <>\r\n    <mesh position={[target[0], -0.5, target[2]]} castShadow>\r\n      <boxBufferGeometry attach='geometry' args={[0.25, 0.1, 0.25]} />\r\n      <meshPhysicalMaterial attach='material' color='darkgreen' />\r\n    </mesh>\r\n    {points.slice(1).map(p => (\r\n      <mesh position={[p[1] * 2, -0.5, p[0] * 2]} castShadow>\r\n        <boxBufferGeometry attach='geometry' args={[0.25, 0.1, 0.25]} />\r\n        <meshPhysicalMaterial attach='material' color='green' />\r\n      </mesh>\r\n    ))}\r\n  </>\r\n}\r\n\r\nexport default () => {\r\n  const [activePlayers, setActivePlayers] = useState(['oldman']);\r\n  const [cameraControlsPosition, setCameraControlsPosition] = useState([25, 0, 25])\r\n  const [targetPosition, setTargetPosition] = useState([25, 0, 25]);\r\n  const [cameraPosition, setCameraPosition] = useState([60, 5, 75]);\r\n  const [path, setPath] = useState([]);\r\n  const [isWasmReady, setWasmReady] = useState(false);\r\n  const [isWorkerBusy, setIsWorkerBusy] = useState(false);\r\n  const [isMultipleSelectActive, setMultipleSelectActive] = useState(false);\r\n\r\n  const playerIds = [\r\n    'oldman',\r\n    'ninja-1',\r\n    'Manequin-2',\r\n    'Manequin-3',\r\n    'Manequin-4',\r\n    'Manequin-5',\r\n  ];\r\n  const [playersState, dispatch] = useReducer(playersReducer, {\r\n    movement: playerIds.reduce((acc, id) => ({ ...acc, [id]: null }), {}),\r\n    position: playerIds.reduce((acc, id, index) => ({ ...acc, [id]: [25 + index, 0, 25 + index] }), {}),\r\n  });\r\n\r\n  async function handleFloorClick(e) {\r\n    e.stopPropagation();\r\n    if (isWorkerBusy) {\r\n      return;\r\n    }\r\n    for (const player of activePlayers) {\r\n      const path = await searchPath(\r\n        playersState.position[player],\r\n        [e.point.x, e.point.y, e.point.z]\r\n      );\r\n      if (path) {\r\n        dispatch(movePlayer(player, path));\r\n      }\r\n    }\r\n  }\r\n  function handleCharClick(e, playerId) {\r\n    e.stopPropagation();\r\n    if (isMultipleSelectActive) {\r\n      const newActivePlayers = activePlayers.find(id => id === playerId)\r\n        ? activePlayers.filter(id => id !== playerId)\r\n        : activePlayers.concat([playerId]);\r\n      setActivePlayers(newActivePlayers);\r\n    } else {\r\n      setActivePlayers([playerId]);\r\n    }\r\n  }\r\n  async function searchPath(from, to) {\r\n    if (isWorkerBusy) {\r\n      return [];\r\n    }\r\n    setIsWorkerBusy(true);\r\n    const path = await findPathAsync(from, to);\r\n    setIsWorkerBusy(false);\r\n    return path;\r\n  }\r\n  async function handleMove(e) {\r\n    const newTarget = [e.point.x, e.point.y, e.point.z];\r\n    const path = await searchPath(playersState.position[activePlayers[0]], newTarget);\r\n    setTargetPosition(newTarget);    \r\n    setPath(path);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isWasmReady) {\r\n      startPathFinding(50, 50);\r\n    }\r\n  }, [isWasmReady]);\r\n  useEffect(() => {\r\n    initPathfinding().then(() => setWasmReady(true));\r\n  }, []);\r\n\r\n  function handleKeydown(e) {\r\n    if (e.nativeEvent.keyCode === 16 && !isMultipleSelectActive) {\r\n      // left shift\r\n      setMultipleSelectActive(true);\r\n    }\r\n  }\r\n  function handleKeyup(e) {\r\n    if (e.nativeEvent.keyCode === 16 && isMultipleSelectActive) {\r\n    // left shift\r\n    setMultipleSelectActive(false);\r\n  }\r\n  }\r\n\r\n  return isWasmReady && (\r\n    <Canvas\r\n      onCreated={({ gl }) => {\r\n        gl.shadowMap.enabled = true\r\n        gl.shadowMap.type = THREE.PCFSoftShadowMap\r\n        // gl.physicallyCorrectLights = true;\r\n      }}\r\n      shadowMap\r\n      onKeyDown={handleKeydown}\r\n      onKeyUp={handleKeyup}\r\n    >\r\n      <Camera position={cameraPosition} />\r\n      <Controls position={cameraControlsPosition} target={cameraControlsPosition} isEnabled={!isMultipleSelectActive} />\r\n      <ambientLight intensity={0.75} />\r\n      {/* <fog attach='fog' args={['black', 75, 100]} /> */}\r\n\r\n      <Context.Provider value={{ dispatch, playersState }}>\r\n        {playerIds.map((id) => <Character\r\n          id={id}\r\n          position={playersState.position[id]}\r\n          model=\"player/Manequin\"\r\n          isSelected={activePlayers.includes(id)}\r\n          onClick={handleCharClick}\r\n        />)}\r\n        <Landscape\r\n          handleClick={handleFloorClick}\r\n          handleMove={handleMove}\r\n          isMultipleSelectActive={isMultipleSelectActive}\r\n          onSelect={setActivePlayers}\r\n        />\r\n      </Context.Provider>\r\n      <Pines setObstacles={setObstacles} />\r\n      <Path points={path} target={targetPosition} />\r\n    </Canvas>\r\n  );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"5b4d96d23a5943112a7b.worker.js\");\n};","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2ba05b3336fcb33dda17.worker.js\");\n};"],"sourceRoot":""}